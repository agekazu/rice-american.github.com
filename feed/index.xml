<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[こめぶろぐ]]></title>
  <link href="http://rice-american.github.io/feed" rel="self"/>
  <link href="http://rice-american.github.io/"/>
  <updated>2014-03-07T13:35:32+09:00</updated>
  <id>http://rice-american.github.io/</id>
  <author>
    <name><![CDATA[rice_american]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[railsで、暗号化されたpasswordを使ってログイン機構を作ってみる。]]></title>
    <link href="http://rice-american.github.io/blog/2014/03/07/rails-sec-login/"/>
    <updated>2014-03-07T13:23:17+09:00</updated>
    <id>http://rice-american.github.io/blog/2014/03/07/rails-sec-login</id>
    <content type="html"><![CDATA[<p>前回でpasswordの暗号化までいけたので、今度はそれを使ってログインするところまで。
参考: <a href="http://qiita.com/regonn/items/4c76d4f3ef6c6af5c5e5">Rails4対応 Gemを使わずに自分だけログインできる環境を作る &ndash; Qiita</a></p>

<h3>1. ログイン環境のsessionコントローラを生成</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>rails g controller sessions
</span></code></pre></td></tr></table></div></figure>


<h3>2. viewの作成</h3>

<p><code>views/sessions/new.html.erb</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'><span class="o">&lt;</span><span class="n">div</span> <span class="n">class</span><span class="o">=</span><span class="s2">&quot;row&quot;</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="n">div</span> <span class="n">class</span><span class="o">=</span><span class="s2">&quot;span6 offset3&quot;</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="sr">/div&gt;&lt;%- model_class = User -%&gt;</span>
</span><span class='line'><span class="sr">&lt;div class=&quot;page-header&quot;&gt;</span>
</span><span class='line'><span class="sr">  &lt;!--  &lt;h1&gt;&lt;%=t &#39;.title&#39;, :default =&gt; [:&#39;helpers.titles.new&#39;, &#39;New %{model}&#39;], :model =&gt; model_class.model_name.human.titleize %&gt;&lt;/</span><span class="n">h1</span><span class="o">&gt;--&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/div&gt;</span>
</span><span class='line'><span class="sr">&lt;%= simple_form_for @user, url: sessions_path, html: { class: &#39;form-horizontal&#39; } do |f| %&gt;</span>
</span><span class='line'><span class="sr">  &lt;h2 class=&quot;simple_form-heading&quot;&gt;ログイン&lt;/</span><span class="n">h2</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="sx">%= f.input :user_name, label: false, placeholder: &#39;ユーザ名 or メールアドレス&#39;, input_html: { type: &#39;text&#39;, class: &#39;form-control input-xlarge&#39;, id: &#39;user_user_name&#39;} %&gt;</span>
</span><span class='line'><span class="sx">  &lt;%=</span> <span class="n">f</span><span class="o">.</span><span class="n">input</span> <span class="ss">:password</span><span class="p">,</span> <span class="ss">label</span><span class="p">:</span> <span class="kp">false</span><span class="p">,</span> <span class="ss">placeholder</span><span class="p">:</span> <span class="s1">&#39;パスワード&#39;</span><span class="p">,</span> <span class="n">input_html</span><span class="p">:</span> <span class="p">{</span> <span class="ss">type</span><span class="p">:</span> <span class="s1">&#39;password_confirm&#39;</span><span class="p">,</span> <span class="ss">class</span><span class="p">:</span> <span class="s1">&#39;form-control input-xlarge&#39;</span><span class="p">,</span> <span class="nb">id</span><span class="p">:</span> <span class="s1">&#39;password&#39;</span><span class="p">}</span>  <span class="sx">%&gt;</span>
</span><span class='line'><span class="sx">  &lt;%= f.button :submit, label: false, value: &#39;login&#39;, class: &#39;btn btn-lg btn-primary btn-block&#39; %&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="sx">% end %&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sx">&lt;/div&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>3. routes.rbにsessionsのルートを追加</h3>

<p><code>config/routes.rb</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'><span class="n">resources</span> <span class="ss">:sessions</span><span class="p">,</span> <span class="ss">only</span><span class="p">:</span> <span class="o">[</span><span class="ss">:new</span><span class="p">,</span> <span class="ss">:create</span><span class="p">,</span> <span class="ss">:destroy</span><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<h3>4. controllerを編集</h3>

<p><code>app/controller/session_controller.rb</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'><span class="k">class</span> <span class="nc">SessionsController</span> <span class="o">&lt;</span> <span class="no">ApplicationController</span>
</span><span class='line'>    <span class="k">def</span> <span class="nf">new</span>
</span><span class='line'>        <span class="vi">@user</span> <span class="o">=</span> <span class="no">User</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">create</span>
</span><span class='line'>        <span class="n">user</span> <span class="o">=</span> <span class="no">User</span><span class="o">.</span><span class="n">find_by_user_name</span><span class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:user</span><span class="o">][</span><span class="ss">:user_name</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'>        <span class="k">if</span> <span class="n">user</span> <span class="o">&amp;&amp;</span> <span class="n">user</span><span class="o">.</span><span class="n">authenticate</span><span class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:user</span><span class="o">][</span><span class="ss">:password</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'>            <span class="n">session</span><span class="o">[</span><span class="ss">:user_id</span><span class="o">]</span> <span class="o">=</span> <span class="n">user</span><span class="o">.</span><span class="n">id</span>
</span><span class='line'>            <span class="n">redirect_to</span> <span class="n">root_path</span>
</span><span class='line'>        <span class="k">else</span>
</span><span class='line'>            <span class="n">flash</span><span class="o">.</span><span class="n">now</span><span class="o">.</span><span class="n">alert</span> <span class="o">=</span> <span class="s2">&quot;ユーザ名かパスワードが間違っています&quot;</span>
</span><span class='line'>            <span class="kp">new</span><span class="p">()</span>
</span><span class='line'>            <span class="n">render</span> <span class="s2">&quot;new&quot;</span>
</span><span class='line'>        <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">destroy</span>
</span><span class='line'>        <span class="n">session</span><span class="o">[</span><span class="ss">:user_id</span><span class="o">]</span> <span class="o">=</span> <span class="kp">nil</span>
</span><span class='line'>        <span class="n">redirect_to</span> <span class="n">root_path</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>現段階では、ログイン認証に成功すると、root(jantaku)に飛びます。</p>

<h3>5. Viewのヘルパーメソッドでログイン情報を取得できるようにする</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'><span class="c1">#app/controller/application_controller.rb</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">current_user</span>
</span><span class='line'>    <span class="vi">@current_user</span> <span class="o">||=</span> <span class="no">User</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="n">session</span><span class="o">[</span><span class="ss">:user_id</span><span class="o">]</span><span class="p">)</span> <span class="k">if</span> <span class="n">session</span><span class="o">[</span><span class="ss">:user_id</span><span class="o">]</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">helper_method</span> <span class="ss">:current_user</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h3>6. Viewにログイン機能へのパスを書きます。</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='erb'><span class='line'><span class="x">&lt;h1&gt;kitaken Top&lt;/h1&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="cp">&lt;%</span> <span class="k">if</span> <span class="n">current_user</span> <span class="o">==</span> <span class="kp">nil</span> <span class="cp">%&gt;</span><span class="x"></span>
</span><span class='line'><span class="cp">&lt;%=</span> <span class="n">button_to</span> <span class="s2">&quot;create account&quot;</span><span class="p">,</span> <span class="n">new_user_path</span><span class="p">,</span> <span class="nb">method</span><span class="p">:</span> <span class="ss">:get</span><span class="p">,</span> <span class="ss">class</span><span class="p">:</span> <span class="s2">&quot;btn btn-lg&quot;</span> <span class="cp">%&gt;</span><span class="x"></span>
</span><span class='line'><span class="cp">&lt;%=</span> <span class="n">button_to</span> <span class="s2">&quot;login&quot;</span><span class="p">,</span> <span class="n">new_session_path</span><span class="p">,</span> <span class="nb">method</span><span class="p">:</span> <span class="ss">:get</span><span class="p">,</span> <span class="ss">class</span><span class="p">:</span>  <span class="s2">&quot;btn btn-lg&quot;</span> <span class="cp">%&gt;</span><span class="x"></span>
</span><span class='line'><span class="cp">&lt;%</span> <span class="k">else</span> <span class="cp">%&gt;</span><span class="x"></span>
</span><span class='line'><span class="x">  </span><span class="cp">&lt;%=</span> <span class="n">button_to</span> <span class="s2">&quot;logout&quot;</span><span class="p">,</span> <span class="n">session_path</span><span class="p">(</span><span class="n">current_user</span><span class="o">.</span><span class="n">id</span><span class="p">),</span> <span class="ss">data</span><span class="p">:</span> <span class="p">{</span><span class="ss">:confirm</span> <span class="o">=&gt;</span> <span class="s1">&#39;ログアウトしますか？&#39;</span><span class="p">},</span> <span class="nb">method</span><span class="p">:</span> <span class="ss">:delete</span><span class="p">,</span> <span class="ss">class</span><span class="p">:</span> <span class="s2">&quot;btn btn-lg&quot;</span> <span class="cp">%&gt;</span><span class="x"></span>
</span><span class='line'><span class="cp">&lt;%</span> <span class="k">end</span> <span class="cp">%&gt;</span><span class="x"></span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>未ログイン時</li>
</ul>


<p><img src="https://f.cloud.github.com/assets/1464221/2343867/8611e0e6-a516-11e3-9c6d-e7cf0617eba5.png" alt="2014-03-06 18 58 36" /></p>

<ul>
<li>ログイン時</li>
</ul>


<p><img src="https://f.cloud.github.com/assets/1464221/2343918/7ee8d0c6-a517-11e3-91cc-f748920c79d6.png" alt="2014-03-06 18 59 06" /></p>

<h3>他のcontrollerで次のように書けばログインしていない状態でeditやnewのページに行こうとするとrootへ戻す。</h3>

<h1>controller</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'><span class="n">before_action</span> <span class="ss">:login_check</span><span class="p">,</span> <span class="ss">only</span><span class="p">:</span> <span class="o">[</span><span class="ss">:new</span><span class="p">,</span> <span class="ss">:edit</span><span class="p">,</span> <span class="ss">:destroy</span><span class="o">]</span>
</span><span class='line'><span class="c1">#各メソッド</span>
</span><span class='line'>
</span><span class='line'><span class="kp">private</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">login_check</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">session</span><span class="o">[</span><span class="ss">:user_id</span><span class="o">]</span> <span class="o">==</span> <span class="kp">nil</span><span class="p">)</span>
</span><span class='line'>      <span class="n">redirect_to</span> <span class="n">root_path</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>今回、コレは行っていません。</p>

<p>以上！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[railsで、ユーザの入力したpasswordを暗号化して保存する(実践編)]]></title>
    <link href="http://rice-american.github.io/blog/2014/03/03/secdb-rails-2/"/>
    <updated>2014-03-03T16:30:03+09:00</updated>
    <id>http://rice-american.github.io/blog/2014/03/03/secdb-rails-2</id>
    <content type="html"><![CDATA[<p>前回調べたセキュアなDB運用の手順を実際にやってみる。</p>

<h3>1. bcrypt-rubyをGemfileに追加する。(passwordをhash化するgem)</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'><span class="n">gem</span> <span class="s1">&#39;bcrypt-ruby&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>2. migrationの実行</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>vagrant:% rails generate migration <span class="se">\</span>
</span><span class='line'>&gt; add_password_digest_to_users password_digest:string
</span><span class='line'>
</span><span class='line'>      invoke  active_record
</span><span class='line'>      create    db/migrate/20140303080315_add_password_digest_to_users.rb
</span></code></pre></td></tr></table></div></figure>


<h3>3. userstableにpassword_digestを追加する</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>vagrant:% bundle <span class="nb">exec </span>rake db:migrate                                            <span class="o">[</span>/vagrant/work/Mahjong<span class="o">]</span>
</span><span class='line'><span class="o">==</span>  AddPasswordDigestToUsers: <span class="nv">migrating</span> <span class="o">=======================================</span>
</span><span class='line'>-- add_column<span class="o">(</span>:users, :password_digest, :string<span class="o">)</span>
</span><span class='line'>   -&gt; 0.0008s
</span><span class='line'><span class="o">==</span>  AddPasswordDigestToUsers: migrated <span class="o">(</span>0.0009s<span class="o">)</span> <span class="o">==============================</span>
</span></code></pre></td></tr></table></div></figure>


<h3>4. テスト用のDBの用意</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>% bundle <span class="nb">exec </span>rake <span class="nb">test</span>:prepare
</span></code></pre></td></tr></table></div></figure>


<h3>5. パスワードの長さとauthenticateメソッドをテストする。</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'><span class="nb">require</span> <span class="s1">&#39;spec_helper&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="n">describe</span> <span class="no">User</span> <span class="k">do</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">before</span> <span class="k">do</span>
</span><span class='line'>    <span class="vi">@user</span> <span class="o">=</span> <span class="no">User</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="nb">name</span><span class="p">:</span> <span class="s2">&quot;Example User&quot;</span><span class="p">,</span> <span class="ss">email</span><span class="p">:</span> <span class="s2">&quot;user@example.com&quot;</span><span class="p">,</span>
</span><span class='line'>                     <span class="ss">password</span><span class="p">:</span> <span class="s2">&quot;foobar&quot;</span><span class="p">,</span> <span class="n">password_confirmation</span><span class="p">:</span> <span class="s2">&quot;foobar&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">subject</span> <span class="p">{</span> <span class="vi">@user</span> <span class="p">}</span>
</span><span class='line'>  <span class="o">.</span>
</span><span class='line'>  <span class="o">.</span>
</span><span class='line'>  <span class="o">.</span>
</span><span class='line'>  <span class="n">it</span> <span class="p">{</span> <span class="n">should</span> <span class="n">respond_to</span><span class="p">(</span><span class="ss">:authenticate</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'>  <span class="o">.</span>
</span><span class='line'>  <span class="o">.</span>
</span><span class='line'>  <span class="o">.</span>
</span><span class='line'>  <span class="n">describe</span> <span class="s2">&quot;with a password that&#39;s too short&quot;</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">before</span> <span class="p">{</span> <span class="vi">@user</span><span class="o">.</span><span class="n">password</span> <span class="o">=</span> <span class="vi">@user</span><span class="o">.</span><span class="n">password_confirmation</span> <span class="o">=</span> <span class="s2">&quot;a&quot;</span> <span class="o">*</span> <span class="mi">5</span> <span class="p">}</span>
</span><span class='line'>    <span class="n">it</span> <span class="p">{</span> <span class="n">should</span> <span class="n">be_invalid</span> <span class="p">}</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">describe</span> <span class="s2">&quot;return value of authenticate method&quot;</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">before</span> <span class="p">{</span> <span class="vi">@user</span><span class="o">.</span><span class="n">save</span> <span class="p">}</span>
</span><span class='line'>    <span class="n">let</span><span class="p">(</span><span class="ss">:found_user</span><span class="p">)</span> <span class="p">{</span> <span class="no">User</span><span class="o">.</span><span class="n">find_by</span><span class="p">(</span><span class="ss">email</span><span class="p">:</span> <span class="vi">@user</span><span class="o">.</span><span class="n">email</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">describe</span> <span class="s2">&quot;with valid password&quot;</span> <span class="k">do</span>
</span><span class='line'>      <span class="n">it</span> <span class="p">{</span> <span class="n">should</span> <span class="n">eq</span> <span class="n">found_user</span><span class="o">.</span><span class="n">authenticate</span><span class="p">(</span><span class="vi">@user</span><span class="o">.</span><span class="n">password</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">describe</span> <span class="s2">&quot;with invalid password&quot;</span> <span class="k">do</span>
</span><span class='line'>      <span class="n">let</span><span class="p">(</span><span class="ss">:user_for_invalid_password</span><span class="p">)</span> <span class="p">{</span> <span class="n">found_user</span><span class="o">.</span><span class="n">authenticate</span><span class="p">(</span><span class="s2">&quot;invalid&quot;</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">it</span> <span class="p">{</span> <span class="n">should_not</span> <span class="n">eq</span> <span class="n">user_for_invalid_password</span> <span class="p">}</span>
</span><span class='line'>      <span class="n">specify</span> <span class="p">{</span> <span class="n">expect</span><span class="p">(</span><span class="n">user_for_invalid_password</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">be_false</span> <span class="p">}</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<ol>
<li><code>bundle exec rspec spec/</code>を実行</li>
</ol>


<p>するとallOKになるらしいけど、エラーでまくった･･･テストは今は考えないでおきます
取り敢えず進める。</p>

<p>最終的にapp/models/users.rbは次のようになった。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'><span class="k">class</span> <span class="nc">User</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>    <span class="n">before_save</span> <span class="p">{</span> <span class="nb">self</span><span class="o">.</span><span class="n">email_address</span> <span class="o">=</span> <span class="n">email_address</span><span class="o">.</span><span class="n">downcase</span> <span class="p">}</span>
</span><span class='line'>    <span class="n">validates</span> <span class="ss">:user_name</span><span class="p">,</span> <span class="ss">presence</span><span class="p">:</span> <span class="kp">true</span><span class="p">,</span> <span class="ss">length</span><span class="p">:</span> <span class="p">{</span> <span class="ss">maximum</span><span class="p">:</span> <span class="mi">50</span> <span class="p">}</span>
</span><span class='line'>    <span class="c1"># 英字:小文字、大文字、数字 format:hoGe@hgoe.hoge</span>
</span><span class='line'>    <span class="no">VALID_EMAIL_REGEX</span> <span class="o">=</span> <span class="sr">/\A[\w+\-.]+@[a-z\d\-.]+\.[a-z]+\z/i</span>
</span><span class='line'>    <span class="no">VALID_PASSWORD_REGEX</span> <span class="o">=</span> <span class="sr">/\w/i</span>
</span><span class='line'>    <span class="no">VALID_USERNAME_REGEX</span> <span class="o">=</span> <span class="sr">/\w/i</span>
</span><span class='line'>    <span class="n">validates</span> <span class="ss">:user_name</span><span class="p">,</span> <span class="ss">presence</span><span class="p">:</span> <span class="kp">true</span><span class="p">,</span>
</span><span class='line'>        <span class="nb">format</span><span class="p">:</span>     <span class="p">{</span><span class="ss">with</span><span class="p">:</span> <span class="no">VALID_USERNAME_REGEX</span><span class="p">},</span>
</span><span class='line'>        <span class="ss">length</span><span class="p">:</span>     <span class="p">{</span><span class="ss">maximum</span><span class="p">:</span> <span class="mi">30</span><span class="p">},</span>
</span><span class='line'>        <span class="ss">uniqueness</span><span class="p">:</span> <span class="p">{</span><span class="n">case_sensitive</span><span class="p">:</span> <span class="kp">true</span><span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">validates</span> <span class="ss">:email_address</span><span class="p">,</span> <span class="ss">presence</span><span class="p">:</span> <span class="kp">true</span><span class="p">,</span>
</span><span class='line'>        <span class="nb">format</span><span class="p">:</span>     <span class="p">{</span><span class="ss">with</span><span class="p">:</span> <span class="no">VALID_EMAIL_REGEX</span><span class="p">},</span>
</span><span class='line'>        <span class="ss">length</span><span class="p">:</span>     <span class="p">{</span><span class="ss">maximum</span><span class="p">:</span> <span class="mi">500</span><span class="p">},</span>
</span><span class='line'>        <span class="ss">uniqueness</span><span class="p">:</span> <span class="p">{</span><span class="n">case_sensitive</span><span class="p">:</span> <span class="kp">false</span><span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">validates</span> <span class="ss">:password</span><span class="p">,</span> <span class="ss">presence</span><span class="p">:</span> <span class="kp">true</span><span class="p">,</span>
</span><span class='line'>        <span class="nb">format</span><span class="p">:</span>     <span class="p">{</span><span class="ss">with</span><span class="p">:</span> <span class="no">VALID_PASSWORD_REGEX</span><span class="p">},</span>
</span><span class='line'>        <span class="ss">length</span><span class="p">:</span>     <span class="p">{</span><span class="ss">within</span><span class="p">:</span> <span class="mi">6</span><span class="o">.</span><span class="n">.</span><span class="mi">30</span><span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">has_secure_password</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>追加したvalidationは</p>

<ol>
<li>username: 30文字以内、記号なし、半角英大文字小文字、数字有り、重複なし</li>
<li>email_address: 100文字以内、記号なし、emailのフォーマットを則っているかを見る</li>
<li>password: 6文字以上30文字以内、記号なし、半角英大文字小文字、数字有り</li>
</ol>


<p>です。</p>

<ul>
<li><p>メモ: 正規表現について</p></li>
<li><p>\A 文字の頭</p></li>
<li>\w 単語構成文字 [a-zA-Z0-9_]</li>
<li>\d 10進数字 [0-9]</li>
</ul>


<p>このへんもおいおい勉強しないと。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[railsで、ユーザの入力したpasswordを暗号化して保存する(調査編)]]></title>
    <link href="http://rice-american.github.io/blog/2014/03/03/secdb-rails/"/>
    <updated>2014-03-03T16:27:35+09:00</updated>
    <id>http://rice-american.github.io/blog/2014/03/03/secdb-rails</id>
    <content type="html"><![CDATA[<p>ユーザの入力したpasswordをそのまま保存するのは危険！
ので、passwordを暗号化する。</p>

<p>参考: <a href="http://railstutorial.jp/chapters/modeling-users?version=4.0#sec-an_encrypted_password">Ruby on Rails チュートリアル：実例を使って Rails を学ぼう6.3 セキュアなパスワードを追加する</a>
→ 今回セキュアなDBの運用のために引用したけど、全部読んだほうがいいかも。。。</p>

<blockquote><p>セキュアなパスワードの実装は、has_secure_passwordというRailsのメソッドを呼び出すだけでほとんど終わってしまいます (このメソッドはRails 3.1から導入されました)。このメソッド1つだけでセキュアなパスワードの実装がほとんど終わってしまうので、逆にこの機能を最初から手作りするのは簡単ではありません。6.3.2以降では、has_secure_passwordメソッドを早期に導入しておき、テストを新しく書くたびにこのメソッドを一時的にコメントアウトして、正しいテスト駆動開発を行うことをお勧めします。(スクリーンキャストは、このような一からの手作り開発手順を解説するのに向いています。この課題を十分に理解したい方は「Ruby on Railsチュートリアルのスクリーンキャスト (英語)」を参照してください)。</p></blockquote>

<h2>導入手順</h2>

<ol>
<li>userstableに<code>password_digest</code>を追加する</li>
<li>bcrypt-rubyをGemfileに追加する。(passwordをhash化するgem)</li>
<li>Userオブジェクトにpassword_digestカラムがあることを確認するテストを追加
<code>spec/models/user_spec.rb</code></li>
</ol>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'><span class="nb">require</span> <span class="s1">&#39;spec_helper&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="n">describe</span> <span class="no">User</span> <span class="k">do</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">before</span> <span class="k">do</span>
</span><span class='line'>    <span class="vi">@user</span> <span class="o">=</span> <span class="no">User</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="nb">name</span><span class="p">:</span> <span class="s2">&quot;Example User&quot;</span><span class="p">,</span> <span class="ss">email</span><span class="p">:</span> <span class="s2">&quot;user@example.com&quot;</span><span class="p">,</span>
</span><span class='line'>                     <span class="ss">password</span><span class="p">:</span> <span class="s2">&quot;foobar&quot;</span><span class="p">,</span> <span class="n">password_confirmation</span><span class="p">:</span> <span class="s2">&quot;foobar&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">subject</span> <span class="p">{</span> <span class="vi">@user</span> <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">it</span> <span class="p">{</span> <span class="n">should</span> <span class="n">respond_to</span><span class="p">(</span><span class="ss">:name</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'>  <span class="n">it</span> <span class="p">{</span> <span class="n">should</span> <span class="n">respond_to</span><span class="p">(</span><span class="ss">:email</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'>  <span class="n">it</span> <span class="p">{</span> <span class="n">should</span> <span class="n">respond_to</span><span class="p">(</span><span class="ss">:password_digest</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'>  <span class="n">it</span> <span class="p">{</span> <span class="n">should</span> <span class="n">respond_to</span><span class="p">(</span><span class="ss">:password</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'>  <span class="n">it</span> <span class="p">{</span> <span class="n">should</span> <span class="n">respond_to</span><span class="p">(</span><span class="ss">:password_confirmation</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">it</span> <span class="p">{</span> <span class="n">should</span> <span class="n">be_valid</span> <span class="p">}</span>
</span><span class='line'>  <span class="o">.</span>
</span><span class='line'>  <span class="o">.</span>
</span><span class='line'>  <span class="o">.</span>
</span><span class='line'>  <span class="n">describe</span> <span class="s2">&quot;when password is not present&quot;</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">before</span> <span class="k">do</span>
</span><span class='line'>      <span class="vi">@user</span> <span class="o">=</span> <span class="no">User</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="nb">name</span><span class="p">:</span> <span class="s2">&quot;Example User&quot;</span><span class="p">,</span> <span class="ss">email</span><span class="p">:</span> <span class="s2">&quot;user@example.com&quot;</span><span class="p">,</span>
</span><span class='line'>                       <span class="ss">password</span><span class="p">:</span> <span class="s2">&quot; &quot;</span><span class="p">,</span> <span class="n">password_confirmation</span><span class="p">:</span> <span class="s2">&quot; &quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>    <span class="n">it</span> <span class="p">{</span> <span class="n">should_not</span> <span class="n">be_valid</span> <span class="p">}</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">describe</span> <span class="s2">&quot;when password doesn&#39;t match confirmation&quot;</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">before</span> <span class="p">{</span> <span class="vi">@user</span><span class="o">.</span><span class="n">password_confirmation</span> <span class="o">=</span> <span class="s2">&quot;mismatch&quot;</span> <span class="p">}</span>
</span><span class='line'>    <span class="n">it</span> <span class="p">{</span> <span class="n">should_not</span> <span class="n">be_valid</span> <span class="p">}</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>このコードは、実は次の一行に置き換えられる。
<code>app/models/user_spec.rb</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'><span class="k">class</span> <span class="nc">User</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>  <span class="o">.</span>
</span><span class='line'>  <span class="o">.</span>
</span><span class='line'>  <span class="o">.</span>
</span><span class='line'>  <span class="n">has_secure_password</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>has_secure_passwordは、</p>

<blockquote><p>password属性とpassword_confirmation属性を追加し、パスワードが存在することを要求し、パスワードとパスワードの確認が一致することを要求し、さらにauthenticateメソッドを使用して、暗号化されたパスワードとpassword_digestを比較してユーザーを認証する</p></blockquote>

<p>ことができるすごいやつ。ソースコードよみたいならココ→<a href="https://github.com/rails/rails/blob/master/activemodel/lib/active_model/secure_password.rb">rails/activemodel/lib/active_model/secure_password.rb at master · rails/rails</a>
(ただし、password_digestカラムを入れておくのを忘れないように。)</p>

<p>セキュアパスワードの最終的な実装は</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'><span class="k">class</span> <span class="nc">User</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>  <span class="n">before_save</span> <span class="p">{</span> <span class="nb">self</span><span class="o">.</span><span class="n">email</span> <span class="o">=</span> <span class="n">email</span><span class="o">.</span><span class="n">downcase</span> <span class="p">}</span>
</span><span class='line'>  <span class="n">validates</span> <span class="ss">:name</span><span class="p">,</span> <span class="ss">presence</span><span class="p">:</span> <span class="kp">true</span><span class="p">,</span> <span class="ss">length</span><span class="p">:</span> <span class="p">{</span> <span class="ss">maximum</span><span class="p">:</span> <span class="mi">50</span> <span class="p">}</span>
</span><span class='line'>  <span class="no">VALID_EMAIL_REGEX</span> <span class="o">=</span> <span class="sr">/\A[\w+\-.]+@[a-z\d\-.]+\.[a-z]+\z/i</span>
</span><span class='line'>  <span class="n">validates</span> <span class="ss">:email</span><span class="p">,</span> <span class="ss">presence</span><span class="p">:</span>   <span class="kp">true</span><span class="p">,</span>
</span><span class='line'>                    <span class="nb">format</span><span class="p">:</span>     <span class="p">{</span> <span class="ss">with</span><span class="p">:</span> <span class="no">VALID_EMAIL_REGEX</span> <span class="p">},</span>
</span><span class='line'>                    <span class="ss">uniqueness</span><span class="p">:</span> <span class="p">{</span> <span class="n">case_sensitive</span><span class="p">:</span> <span class="kp">false</span> <span class="p">}</span>
</span><span class='line'>  <span class="n">has_secure_password</span>
</span><span class='line'>  <span class="n">validates</span> <span class="ss">:password</span><span class="p">,</span> <span class="ss">length</span><span class="p">:</span> <span class="p">{</span> <span class="ss">minimum</span><span class="p">:</span> <span class="mi">6</span> <span class="p">}</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>こうなる。
時間が来たので、実際にやってみるのは次回。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[+rubyなvimを入れた奮闘記]]></title>
    <link href="http://rice-american.github.io/blog/2014/02/28/vim-ruby/"/>
    <updated>2014-02-28T23:33:04+09:00</updated>
    <id>http://rice-american.github.io/blog/2014/02/28/vim-ruby</id>
    <content type="html"><![CDATA[<p>使っていたvimが-rubyだったので+rubyにするように奮闘した記録。</p>

<p>現在(2014/02/28)の段階で<code>% brew install vim</code>で入るのがversion 7.4.192なのだが、<code>% brew options vim</code>とかやると</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>% brew options vim                                                <span class="o">[</span>~<span class="o">]</span>
</span><span class='line'>--disable-nls
</span><span class='line'>  Build vim without National Language Support <span class="o">(</span>translated messages, keymaps<span class="o">)</span>
</span><span class='line'>--override-system-vi
</span><span class='line'>  Override system vi
</span><span class='line'>--with-client-server
</span><span class='line'>  Enable client/server mode
</span><span class='line'>--with-lua
</span><span class='line'>  Build vim with lua support
</span><span class='line'>--with-mzscheme
</span><span class='line'>  Build vim with mzscheme support
</span><span class='line'>--with-perl
</span><span class='line'>  Build vim with perl support
</span><span class='line'>--with-python3
</span><span class='line'>  Build vim with python3 support
</span><span class='line'>--with-tcl
</span><span class='line'>  Build vim with tcl support
</span><span class='line'>--without-python
</span><span class='line'>  Build vim without python support
</span><span class='line'>--without-ruby
</span><span class='line'>  Build vim without ruby support
</span><span class='line'>--HEAD
</span><span class='line'>  install HEAD version
</span></code></pre></td></tr></table></div></figure>


<p>+rubyにするオプションがなく･･･困った。</p>

<p>しかたがないのでbrewでDLしたvimのsrcファイルに移動して、</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>% ls                      <span class="o">(</span>default<span class="o">)[</span>/Library/Caches/Homebrew/vim--hg<span class="o">]</span>
</span><span class='line'>Contents                README_srcdos.txt
</span><span class='line'>Contents.info*          README_unix.txt
</span><span class='line'>Filelist                README_vms.txt
</span><span class='line'>Makefile                README_w32s.txt
</span><span class='line'>README.txt              Vim.info*
</span><span class='line'>README.txt.info*        Xxd.info*
</span><span class='line'>README_ami.txt          configure*
</span><span class='line'>README_ami.txt.info*    csdpmi4b.zip*
</span><span class='line'>README_amibin.txt       farsi/
</span><span class='line'>README_amibin.txt.info* libs/
</span><span class='line'>README_amisrc.txt       nsis/
</span><span class='line'>README_amisrc.txt.info* pixmaps/
</span><span class='line'>README_bindos.txt       runtime/
</span><span class='line'>README_dos.txt          runtime.info*
</span><span class='line'>README_extra.txt        src/
</span><span class='line'>README_mac.txt          src.info*
</span><span class='line'>README_ole.txt          uninstal.txt
</span><span class='line'>README_os2.txt          vimdir.info*
</span><span class='line'>README_os390.txt        vimtutor.bat
</span><span class='line'>README_src.txt          vimtutor.com*
</span><span class='line'>% ./configure --prefix<span class="o">=</span>/usr/local --mandir<span class="o">=</span>/usr/local/Cellar/vim/7.4  --enable-rubyinterp
</span><span class='line'>% make <span class="o">&amp;&amp;</span> make install
</span></code></pre></td></tr></table></div></figure>


<p>とやると</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>% vim --version | grep ruby
</span><span class='line'>+diff            +menu            +ruby            +writebackup
</span></code></pre></td></tr></table></div></figure>


<p>できた。</p>

<p>無理やりだけどまぁ、いいや。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[pgbackupsを使って、HerokuのDBをlocalにリストアしてDBにデータをinsertしてHerokuのDBへリストアするまで。]]></title>
    <link href="http://rice-american.github.io/blog/2014/02/24/pgbackups/"/>
    <updated>2014-02-24T12:10:02+09:00</updated>
    <id>http://rice-american.github.io/blog/2014/02/24/pgbackups</id>
    <content type="html"><![CDATA[<h2>何を使うか。</h2>

<p>調べてみるとpgbackupsというherokuのpluginがあった。コレを使えばherokuのDBからリストアしてローカルで復元、なんてこともできるらしい。</p>

<p>参考: <a href="http://qiita.com/quattro_4/items/a2eb3618207e21ca00d3">Rails &ndash; herokuのデータベースをリセット/リストア/再構築する &ndash; Qiita</a></p>

<h2>やってみた。</h2>

<p>pluginをinstallする。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>% heroku addons:add pgbackups
</span><span class='line'>Adding pgbackups on kitaken-mahjong... <span class="k">done</span>, v16 <span class="o">(</span>free<span class="o">)</span>
</span><span class='line'>You can now use <span class="s2">&quot;pgbackups&quot;</span> to backup your databases or import an external backup.
</span><span class='line'>Use <span class="sb">`</span>heroku addons:docs pgbackups<span class="sb">`</span> to view documentation.
</span></code></pre></td></tr></table></div></figure>


<p>backupないか確認</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>% heroku pgbackups
</span><span class='line'> !    No backups. Capture one with <span class="sb">`</span>heroku pgbackups:capture<span class="sb">`</span>.
</span></code></pre></td></tr></table></div></figure>


<p>ないので、backupを行う</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>% heroku pgbackups:capture
</span><span class='line'>
</span><span class='line'>HEROKU_POSTGRESQL_ORANGE_URL <span class="o">(</span>DATABASE_URL<span class="o">)</span>  ----backup---&gt;  b001
</span><span class='line'>
</span><span class='line'>Capturing... <span class="k">done</span>
</span><span class='line'>Storing... <span class="k">done</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>$ heroku pgbackups --app appname</code>とかすると、appを指定してバックアップできる。
続いて取得したbackupをlocalにDLしてみる。
(追記: <code>curl -o latest.dump</code>heroku pgbackups:url &mdash;app heroku_appname`ってやると一発でdlできるみたい。)</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>% heroku pgbackups
</span><span class='line'>ID    Backup Time          Status                          Size   Database
</span><span class='line'>----  -------------------  ------------------------------  -----  -------------------------------------------
</span><span class='line'>b001  2014/02/23 09:00.07  Finished @ 2014/02/23 09:00.10  5.9KB  HEROKU_POSTGRESQL_ORANGE_URL <span class="o">(</span>DATABASE_URL<span class="o">)</span>
</span><span class='line'>% heroku pgbackups:url b001
</span><span class='line'><span class="s2">&quot;https://s3.amazonaws.com/hkpgbackups/app22056631@heroku.com/b001.dump?AWSAccessKeyId=(ながいkeyidがずらずら)&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>リンクに行くとb001.dumpというファイルがDLされた。リンクは<strong>約10分後にはAccessDenied</strong>になるらしい。</p>

<p>ではdumpファイルをリストアします。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>% pg_restore --verbose --clean --no-acl --no-owner -h localhost -U myuser -d mydb b001.dump
</span></code></pre></td></tr></table></div></figure>


<p>myuserに任意のユーザ名、mydbに任意のデータベース名を入れましょう。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>% createdb mydb
</span><span class='line'>% pg_restore --verbose --clean --no-acl --no-owner -h localhost -U myuser -d mydb /Users/user/Desktop/b001.dump
</span><span class='line'>pg_restore: connecting to database <span class="k">for </span>restore
</span><span class='line'>pg_restore: dropping INDEX unique_schema_migrations
</span><span class='line'>pg_restore: <span class="o">[</span>archiver <span class="o">(</span>db<span class="o">)]</span> Error <span class="k">while </span>PROCESSING TOC:
</span><span class='line'>pg_restore: <span class="o">[</span>archiver <span class="o">(</span>db<span class="o">)]</span> Error from TOC entry 2728; 1259 1466031 INDEX unique_schema_migrations wblyjdvsoodhup
</span><span class='line'>pg_restore: <span class="o">[</span>archiver <span class="o">(</span>db<span class="o">)]</span> could not execute query: ERROR:  index <span class="s2">&quot;unique_schema_migrations&quot;</span> does not exist
</span><span class='line'>    Command was: DROP INDEX public.unique_schema_migrations;
</span><span class='line'><span class="o">(</span>中略<span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>エラーが出まくってる気がするけど気にしない。</p>

<p><code>psql</code>をコマンドラインで実行して</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">user</span><span class="o">=</span><span class="c"># \l</span>
</span><span class='line'>                                         List of databases
</span><span class='line'>           Name            |   Owner   | Encoding |   Collate   |    Ctype    |  Access privileges
</span><span class='line'>---------------------------+-----------+----------+-------------+-------------+---------------------
</span><span class='line'> mydb                      | user   | UTF8     | ja_JP.UTF-8 | ja_JP.UTF-8 |**←コレ**
</span><span class='line'>
</span><span class='line'><span class="nv">user</span><span class="o">=</span><span class="c"># \connect mydb</span>
</span><span class='line'>You are now connected to database <span class="s2">&quot;mydb&quot;</span> as user <span class="s2">&quot;user&quot;</span>.
</span><span class='line'><span class="nv">mydb</span><span class="o">=</span><span class="c"># \d</span>
</span><span class='line'>               List of relations
</span><span class='line'> Schema |       Name        |   Type   | Owner
</span><span class='line'>--------+-------------------+----------+--------
</span><span class='line'> public | schema_migrations | table    | myuser
</span><span class='line'> public | users             | table    | myuser
</span><span class='line'> public | users_id_seq      | sequence | myuser
</span><span class='line'> public | yakus             | table    | myuser
</span><span class='line'> public | yakus_id_seq      | sequence | myuser
</span><span class='line'><span class="o">(</span>5 rows<span class="o">)</span>
</span><span class='line'><span class="nv">mydb</span><span class="o">=</span><span class="c"># select * from users;</span>
</span><span class='line'> id | user_name | email_address | password | created_at | updated_at
</span><span class='line'>----+-----------+---------------+----------+------------+------------
</span><span class='line'><span class="o">(</span>0 rows<span class="o">)</span>
</span><span class='line'>
</span><span class='line'><span class="nv">mydb</span><span class="o">=</span><span class="c"># select * from yakus;</span>
</span><span class='line'> id | name | han | fu |         created_at         |         updated_at
</span><span class='line'>----+------+-----+----+----------------------------+----------------------------
</span><span class='line'>  1 | 平和 |   1 |  0 | 2014-02-09 10:34:56.670672 | 2014-02-09 10:34:56.670672
</span><span class='line'><span class="o">(</span>1 row<span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>リストアまで出来ている模様。</p>

<p>\connect知らなくて詰んでた。mysqlでいう<code>use database名</code>みたいに、<code>\connect database名(or \c database名)</code>として使う。あとは<code>\d</code>でtableの情報を表示できる。その他のコマンドについては<a href="http://www.ne.jp/asahi/hishidama/home/tech/postgres/psql.html">ポストグレスpsqlメモ(Hishidama&rsquo;s psql Memo)</a>が一覧で載っててわかりやすいかも。</p>

<h2>localに落としたdbからherokuへリストアしてみよう。</h2>

<p>参考: <a href="http://www.workabroad.jp/posts/2050">ローカルのデータベースをherokuにリストアする | Workabroad.jp</a></p>

<h3>0. DBの書き換え</h3>

<p>今回はYakusのDBに次のように挿入。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">mydb</span><span class="o">=</span><span class="c"># insert into yakus values (2, &#39;断么九&#39;, 1, 20);</span>
</span></code></pre></td></tr></table></div></figure>


<p>断么九の符翻はテキトー。</p>

<h3>1. まずは手元のDBをdumpする。</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>pg_dump -Fc --no-acl --no-owner -h localhost -U myuser mydb &gt; mydb.dump
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>mypassword データベースのパスワード</li>
<li>myuser ユーザー名</li>
<li>mydb データベース名</li>
<li>mydb.dump ダンプのファイル名</li>
</ul>


<h3>2. アップロードする</h3>

<p>herokuにリストアするには、dumpファイルを外部からDL出来る形式にしないといけない。
ここではDropboxにdumpファイルをいれてurlをコピペすることにした。</p>

<p>なお、DropboxからDLのリンクを得るには、
1. Dropbox内からdumpファイルを右クリック
2. Dropboxリンクを共有をクリックしてclipboardにurlをコピー
3. ブラウザでリンクをたどって、ダウンロードボタンのリンクをコピーする
としなければならなかった。</p>

<h3>3. herokuのDBへリストアする</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>% heroku pgbackups:restore DATABASE <span class="s1">&#39;https://dl.dropboxusercontent.com/s/ほげほげ&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>とする。
DATABASEには、<code>heroku config</code>で<code>HEROKU_POSTGRESQL_{COLOR}_URL</code>が出てくるはずなので、COLORを自分の環境で表示された色で置き換えて、実行するとOK.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>% heroku pgbackups:restore HEROKU_POSTGRESQL_<span class="o">{</span>COLOR<span class="o">}</span>_URL <span class="o">(</span>以下略<span class="o">)</span>
</span><span class='line'>
</span><span class='line'>HEROKU_POSTGRESQL_<span class="o">{</span>COLOR<span class="o">}</span>_URL <span class="o">(</span>DATABASE_URL<span class="o">)</span>  &lt;---restore---  mydb.dump
</span><span class='line'>
</span><span class='line'>Retrieving... <span class="k">done</span>
</span><span class='line'>Restoring... <span class="k">done</span>
</span></code></pre></td></tr></table></div></figure>


<p>出来た！herokuappを確認してみよう。</p>

<p><img src="https://f.cloud.github.com/assets/1464221/2242377/54a66162-9d00-11e3-9640-e774af5c6995.png" alt="2014-02-24 12 03 46" /></p>

<p>出来てる！</p>

<h1>おまけ</h1>

<h2>pgbackupsで使えるコマンド一覧</h2>

<p><code>heroku help pg</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>% heroku <span class="nb">help </span>pg
</span><span class='line'>Usage: heroku pg
</span><span class='line'>
</span><span class='line'> list databases <span class="k">for </span>an app
</span><span class='line'>
</span><span class='line'>Additional commands, <span class="nb">type</span> <span class="s2">&quot;heroku help COMMAND&quot;</span> <span class="k">for </span>more details:
</span><span class='line'>
</span><span class='line'>  pg:credentials DATABASE                                   <span class="c">#  display the DATABASE credentials.</span>
</span><span class='line'>  pg:info <span class="o">[</span>DATABASE<span class="o">]</span>                                        <span class="c">#</span>
</span><span class='line'>  pg:kill procpid <span class="o">[</span>DATABASE<span class="o">]</span>                                <span class="c">#  kill a query</span>
</span><span class='line'>  pg:killall <span class="o">[</span>DATABASE<span class="o">]</span>                                     <span class="c">#  terminates ALL connections</span>
</span><span class='line'>  pg:promote DATABASE                                       <span class="c">#  sets DATABASE as your DATABASE_URL</span>
</span><span class='line'>  pg:ps <span class="o">[</span>DATABASE<span class="o">]</span>                                          <span class="c">#  view active queries with execution time</span>
</span><span class='line'>  pg:psql <span class="o">[</span>DATABASE<span class="o">]</span>                                        <span class="c">#</span>
</span><span class='line'>  pg:pull &lt;REMOTE_SOURCE_DATABASE&gt; &lt;LOCAL_TARGET_DATABASE&gt;  <span class="c">#  pull from REMOTE_SOURCE_DATABASE to LOCAL_TARGET_DATABASE</span>
</span><span class='line'>  pg:push &lt;LOCAL_SOURCE_DATABASE&gt; &lt;REMOTE_TARGET_DATABASE&gt;  <span class="c">#  push from LOCAL_SOURCE_DATABASE to REMOTE_TARGET_DATABASE</span>
</span><span class='line'>  pg:reset DATABASE                                         <span class="c">#  delete all data in DATABASE</span>
</span><span class='line'>  pg:unfollow REPLICA                                       <span class="c">#  stop a replica from following and make it a read/write database</span>
</span><span class='line'>  pg:wait <span class="o">[</span>DATABASE<span class="o">]</span>                                        <span class="c">#  monitor database creation, exit when complet</span>
</span></code></pre></td></tr></table></div></figure>


<h2>試してみた。</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>% heroku pg:info
</span><span class='line'><span class="o">===</span> HEROKU_POSTGRESQL_ORANGE_URL <span class="o">(</span>DATABASE_URL<span class="o">)</span>
</span><span class='line'>Plan:        Hobby-dev
</span><span class='line'>Status:      available
</span><span class='line'>Connections: 0
</span><span class='line'>PG Version:  9.3.3
</span><span class='line'>Created:     2014-02-09 10:02 UTC
</span><span class='line'>Data Size:   6.5 MB
</span><span class='line'>Tables:      3
</span><span class='line'>Rows:        3/10000 <span class="o">(</span>In compliance<span class="o">)</span>
</span><span class='line'>Fork/Follow: Unsupported
</span><span class='line'>Rollback:    Unsupported
</span></code></pre></td></tr></table></div></figure>


<p>herokuのDBで無料で作成できるのは10000件までらしいです。超えたままだと一週間後にINSERTできなくなるとか。行削除、再構築などをすれば利用継続できるそう。</p>

<h2>他に便利なコマンド</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c"># データベースマイグレーション</span>
</span><span class='line'>heroku run rake db:migrate
</span><span class='line'>heroku run rake db:seed
</span><span class='line'><span class="c"># 環境の確認 (ENVの値など)</span>
</span><span class='line'>heroku config
</span><span class='line'><span class="c"># railsコンソール</span>
</span><span class='line'>heroku run console
</span><span class='line'>&gt; JunkData.delete_all
</span><span class='line'><span class="c"># ログ確認</span>
</span><span class='line'>% heroku logs -t
</span></code></pre></td></tr></table></div></figure>


<p>以上!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[jenkinsさんにイカしたpluginを入れてみよう！]]></title>
    <link href="http://rice-american.github.io/blog/2014/02/09/jenkins-plugin/"/>
    <updated>2014-02-09T14:05:01+09:00</updated>
    <id>http://rice-american.github.io/blog/2014/02/09/jenkins-plugin</id>
    <content type="html"><![CDATA[<p>jenkinsのpluginはかなりたくさんある！</p>

<p>そんな中でよさ気なpluginを入れてみました。</p>

<ul>
<li><p>参考:<a href="http://sue445.hatenablog.com/entry/2014/01/08/225128">Jenkinsに入れているプラグインまとめ（Rails中心） &ndash; くりにっき</a></p></li>
<li><p>AnsiColor Plugin &ndash; Jenkins &ndash; Jenkins Wiki</p>

<ul>
<li>コンソールに色がつく。</li>
</ul>
</li>
<li>Green Balls &ndash; Jenkins &ndash; Jenkins Wiki

<ul>
<li>デフォルトでテストが成功すると青になるボールを緑にする。このへんは完全に好み。</li>
</ul>
</li>
<li><p>Emotional Jenkins Plugin</p>

<ul>
<li>ビルドが失敗するとJenkinsさんが鬼の形相に、不安定だと不安げに。コレも好み。</li>
</ul>
</li>
<li><p>monitoring Plugin</p>

<ul>
<li>/monitoringでjenkinsさんの状態をグラフで解りやすく表示してくれる！</li>
</ul>
</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[bundle exec rspec spec/*/*.featureが失敗する件]]></title>
    <link href="http://rice-american.github.io/blog/2014/02/08/jenkins-rspec/"/>
    <updated>2014-02-08T13:56:16+09:00</updated>
    <id>http://rice-american.github.io/blog/2014/02/08/jenkins-rspec</id>
    <content type="html"><![CDATA[<p>ローカル環境で</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>bundle install --path vendor/bundle
</span><span class='line'>bundle exec rake db:migrate
</span><span class='line'>bundle exec rake db:test:clone
</span><span class='line'>bundle exec rspec spec/*/*.feature</span></code></pre></td></tr></table></div></figure>


<p>を実行すると、
<em>bundle exec rspec spec/*/*.feature</em>
で</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>% bundle exec rspec spec/*/*.feature          
</span><span class='line'>syntax error, unexpected ':', expecting end-of-input (SyntaxError)
</span><span class='line'>機能: ユーザー管理
</span><span class='line'>       ^</span></code></pre></td></tr></table></div></figure>


<p>エラーが出た(´・ω・`)</p>

<ul>
<li>参考:<a href="http://www.buildinsider.net/enterprise/jenkins/02">Jenkinsで小さなテストを実行してみよう（Mac OS X＆Linux）［Ruby、Rails］ &ndash; Build Insider</a></li>
</ul>


<p>rspecでGherkin記法で記述したfeatureファイルが実行できないよ> &lt; ってことらしい。</p>

<p>.rspecファイルに次のような記述をする。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>-r turnip/rspec --color --format documentation</span></code></pre></td></tr></table></div></figure>


<p>出力に色つけてturnip(RSpecからGherkin記法で記述したテストを実行できるフレームワーク)のrspec使って実行しなさいよーということ･･･かな。</p>

<p>ここまで出来たのでJenkinsサーバの.rspecも直して実行すると･･･成功しました!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[railsでfonticon]]></title>
    <link href="http://rice-american.github.io/blog/2014/01/27/rails-iconfont/"/>
    <updated>2014-01-27T20:53:22+09:00</updated>
    <id>http://rice-american.github.io/blog/2014/01/27/rails-iconfont</id>
    <content type="html"><![CDATA[<p>前にherokuへのテストとしてあげてたRoRアプリケーションにfonticonを入れてみました。</p>

<h2>Fontelloを利用する</h2>

<p>fonticonは数百あるが、そのうちサイトで使うのはせいぜい10個とか。そうなると、使わないfonticonが無駄･･･</p>

<p>そこで、自分の使うfonticonだけを選択してDLできる、Fontelloを使ってみました。</p>

<p><a href="http://fontello.com/">Fontello &ndash; icon fonts generator</a></p>

<p>より詳細な使い方は<a href="http://www.webcreatorbox.com/tech/fonticons/">アイコンフォントでリンクタイプ別にアイコンつける方法 | Webクリエイターボックス</a>を参考にしました。</p>

<p>最終的に次の2つのアイコンを選択してDL.</p>

<p>DLしたディレクトリの中の/fontに選択したfonticonが入っているので、それを<em>任意の場所に移動･･･。</em></p>

<p>ほかのサイトも見て鑑みて、今回は<em>{Rails.root}/app/assets/fonts</em>においてみました。</p>

<p>css,scssの設定</p>

<p>参考:<a href="http://www.webcreatorbox.com/tech/fonticons/">アイコンフォントでリンクタイプ別にアイコンつける方法 | Webクリエイターボックス</a></p>

<p>css,scssファイルに記入</p>

<p><em>{Rails.root}/app/assets/stylesheets/font-awesome.css</em></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>@font-face {
</span><span class='line'>    font-family: 'fonticon';
</span><span class='line'>    src: url('../font/fonticon.eot?61827649');
</span><span class='line'>    src: url('../font/fonticon.eot?61827649#iefix') format('embedded-opentype'),
</span><span class='line'>    url('../font/fonticon.woff?61827649') format('woff'),
</span><span class='line'>    url('../font/fonticon.ttf?61827649') format('truetype'),
</span><span class='line'>    url('../font/fonticon.svg?61827649#fonticon') format('svg');
</span><span class='line'>    font-weight: normal;
</span><span class='line'>    font-style: normal;
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p><em>{Rails.root}/app/assets/stylesheets/fonticon.css.scss</em></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>@import "font-awesome";
</span><span class='line'>
</span><span class='line'>.icon-twitter:before { content: '\74'; } /* 't' */
</span><span class='line'>.icon-plus:before { content: '\70'; } /* 'p' */
</span><span class='line'>
</span><span class='line'>.btn:before {
</span><span class='line'>    font-family: 'fonticon';
</span><span class='line'>    padding: 5px;
</span><span class='line'>    content: '\70'; 
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>.btn-primary:before{
</span><span class='line'>    font-family: 'fonticon';
</span><span class='line'>    content: '\74';
</span><span class='line'>    padding: 5px;
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>h1{
</span><span class='line'>    &:before {
</span><span class='line'>        font-family: 'fonticon';
</span><span class='line'>        content: '\74';
</span><span class='line'>        padding: 10px;
</span><span class='line'>    }
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>safari,chromeではこれでiconが表示されたが、firefoxでは表示されず(´・ω・`)</p>

<p>うーんどうしよう。。。。</p>

<p>というところで今日はここまで。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[さくらVPSにjenkinsとNginxでJenkinsサーバを構築する。]]></title>
    <link href="http://rice-american.github.io/blog/2014/01/27/nginx-jenkins/"/>
    <updated>2014-01-27T16:36:06+09:00</updated>
    <id>http://rice-american.github.io/blog/2014/01/27/nginx-jenkins</id>
    <content type="html"><![CDATA[<p>前回はHerokuにRoRアプリケーションをdeployできたので、次はJenkinsの方をば。</p>

<p>参考: <a href="http://d.hatena.ne.jp/FGtatsuro/20120603/1338653541">さくらのVPSにJenkins/Nginxをインストールする &ndash; 愉快な神様とヘタレな下僕</a></p>

<h2>Jenkinsさんのインストール</h2>

<p>JenkinsさんはJavaがないと動いてくれないので入れておきます。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo yum install -y java-1.6.0-openjdk java-1.6.0-openjdk-devel</span></code></pre></td></tr></table></div></figure>


<p>Jenkinsさんをお招きします</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo wget -O /etc/yum.repos.d/jenkins.repo http://pkg.jenkins-ci.org/redhat/jenkins.repo
</span><span class='line'>$ sudo rpm --import http://pkg.jenkins-ci.org/redhat/jenkins-ci.org.key
</span><span class='line'>$ sudo yum install jenkins</span></code></pre></td></tr></table></div></figure>


<p>Jenkinsさんを動かします</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo service jenkins start</span></code></pre></td></tr></table></div></figure>


<p>ok.</p>

<h2>nginxインストール</h2>

<p>nginxは</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo yum install nginx</span></code></pre></td></tr></table></div></figure>


<p>で入ります。</p>

<h2>ネットワーク設定</h2>

<p>続いて/etc/nginx/nginx.confを書き換えます。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ vi /etc/nginx/nginx.conf
</span><span class='line'>http {
</span><span class='line'>
</span><span class='line'>===
</span><span class='line'>ry)
</span><span class='line'>===
</span><span class='line'>
</span><span class='line'>  server {
</span><span class='line'>    listen 80;
</span><span class='line'>    server_name &lt;ホスト名&gt;;
</span><span class='line'>    location {
</span><span class='line'>      proxy_pass http://localhost:80; 
</span><span class='line'>    }  
</span><span class='line'>  }
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>ホスト名は、サーバのホスト名を入れます。</p>

<p>jenkinsの設定は/etc/nginx/conf.d/jenkins.confを変更します。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>server {
</span><span class='line'>    location /jenkins {
</span><span class='line'>         proxy_pass http://localhost:8080;
</span><span class='line'>    }
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>そしてnginxをrestart!</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>% sudo service nginx restart
</span><span class='line'>nginx を停止中:                                            [  OK  ]
</span><span class='line'>nginx を起動中:                                            [  OK  ]</span></code></pre></td></tr></table></div></figure>


<p>ok.</p>

<p>で、<a href="http://">http://</a>[ホスト名]/jenkinsへアクセスすると･･･Jenkinsさんが表示されました！</p>

<p>次はJenkinsさんの認証を何とかしますー。</p>

<p><a href="http://www.yaunix.com/2013/02/04/%E3%81%95%E3%81%8F%E3%82%89vps%E3%81%A7jenkins%E3%82%92%E3%82%BB%E3%83%83%E3%83%88%E3%82%A2%E3%83%83%E3%83%97%E3%81%97%E3%80%81%E8%AA%8D%E8%A8%BC%E3%82%92%E8%A1%8C%E3%81%86%E3%81%BE%E3%81%A7/">さくらVPSでJenkinsをセットアップし、認証を行うまで | ひたすらメモするだけのブログ</a>を見ると見た感じGUIで設定できるっぽい･･･？</p>

<p>[とりあえず今日はここまで]</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[rails+bootstrapなアプリケーションを作る]]></title>
    <link href="http://rice-american.github.io/blog/2014/01/26/rails-bootstrap/"/>
    <updated>2014-01-26T00:44:29+09:00</updated>
    <id>http://rice-american.github.io/blog/2014/01/26/rails-bootstrap</id>
    <content type="html"><![CDATA[<ul>
<li>install及びアプリ作成までは次のページを参考に</li>
<li><p>参考: <a href="http://www.ohmyenter.com/?p=197">simple_formとTwitter bootstrapで作る俺流鉄板Railsアプリ（その１） / Oh My Enter!</a></p></li>
<li><p>Gemfileに追加</p></li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>gem "therubyracer"
</span><span class='line'># bootstrap
</span><span class='line'>gem "less-rails" #Sprockets (what Rails 3.1 uses for its asset pipeline) s    upports LESS
</span><span class='line'>gem "twitter-bootstrap-rails"</span></code></pre></td></tr></table></div></figure>


<p>次に
<em>bundle install</em>実行</p>

<ul>
<li>bootstrapのinstall</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ rails generate bootstrap:install less</span></code></pre></td></tr></table></div></figure>


<p>assetsやlocalesにファイル生成</p>

<p>基本となるレイアウトを生成する。</p>

<ul>
<li>レスポンシブレイアウトをinstall</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ rails g bootstrap:layout application fluid</span></code></pre></td></tr></table></div></figure>


<p>application_name/config/dtabase.ymlを編集して、ユーザをpostgresに。
そのあと<em>rake db:create RAILS_ENV=development</em>を実行。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[herokuへRuby on Railsアプリケーションをdeployするまで]]></title>
    <link href="http://rice-american.github.io/blog/2014/01/26/heroku-RoR/"/>
    <updated>2014-01-26T00:24:57+09:00</updated>
    <id>http://rice-american.github.io/blog/2014/01/26/heroku-RoR</id>
    <content type="html"><![CDATA[<p><strong>参考</strong>:<a href="http://qiita.com/mah_lab/items/9df8230e709a23b04f7f">Herokuでアプリを公開する直前までのチュートリアル &ndash; Qiita [キータ]</a></p>

<pre><code>$ git clone git://github.com/heroku/ruby-sample.git
$ cd ruby-sample
$ heroku create
$ git push heroku master
$ heroku open
</code></pre>

<p><em>heroku open</em>を実行すると先ほどpushしたrailsアプリが表示される。</p>

<p>applicationの名前を変更するときは<em>$ heroku rename hogehoge</em>とする。</p>

<p>次のようにした。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ heroku rename rice-rails-bootstrap-test                         
</span><span class='line'>Renaming warm-castle-8443 to rice-rails-test... done
</span><span class='line'>http://rice-rails-bootstrap-test.com/ | git@heroku.com:rice-rails-bootstrap-test.git
</span><span class='line'>Git remote heroku updated</span></code></pre></td></tr></table></div></figure>


<h2>前に作ったbootstrap+railsなアプリをdeployする。</h2>

<p>作ったアプリケーションに移動して</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ git init
</span><span class='line'>$ heroku create rice-rails-bootstrap-test
</span><span class='line'>$ git push heroku master
</span><span class='line'>$ heroku open</span></code></pre></td></tr></table></div></figure>


<p>表示されたページにerrorがでた</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>The page you were looking for doesn't exist.</span></code></pre></td></tr></table></div></figure>


<p>検索すると･･･:<a href="http://qiita.com/seltzer/items/d52a31c558a30c857a3f">herokuで「The page you were looking for doesn’t exist.」エラーが出るときの対処法 &ndash; Qiita [キータ]</a></p>

<p><em>『Rails 3.2以降で発生する現象で、アセット周りのプリコンパイルが影響しているのだとか。これを回避するには、オフィシャルドキュメントの手順に加えて次の手順をしなければならないようです。』</em>
とのこと。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ rake assets:precompile</span></code></pre></td></tr></table></div></figure>


<p>だがだめ、</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ vim config/environments/production.rb
</span><span class='line'>config.assets.compile = true</span></code></pre></td></tr></table></div></figure>


<p>としてdeployするもだめ、</p>

<p><a href="http://d.hatena.ne.jp/piggery/20120807">HerokuでRailsアプリを動かす &ndash; かいはつにっき</a></p>

<p>ここを見ると、</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ rails server -e production</span></code></pre></td></tr></table></div></figure>


<p>として動かすと,dbがないと言われた。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>The page you were looking for doesn't exist.</span></code></pre></td></tr></table></div></figure>


<p>検索すると･･･:<a href="http://qiita.com/seltzer/items/d52a31c558a30c857a3f">herokuで「The page you were looking for doesn’t exist.」エラーが出るときの対処法 &ndash; Qiita [キータ]</a></p>

<p><em>『Rails 3.2以降で発生する現象で、アセット周りのプリコンパイルが影響しているのだとか。これを回避するには、オフィシャルドキュメントの手順に加えて次の手順をしなければならないようです。』</em>
とのこと。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ vim config/environments/production.rb
</span><span class='line'>config.assets.compile = true</span></code></pre></td></tr></table></div></figure>


<p>としてdeployするもだめ、</p>

<p><a href="http://d.hatena.ne.jp/piggery/20120807">HerokuでRailsアプリを動かす &ndash; かいはつにっき</a></p>

<p>ここを見ると、</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ rails server -e production</span></code></pre></td></tr></table></div></figure>


<p>として動かすとdbがないと言われた。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ rake db:migrate
</span><span class='line'>$ rake db:create</span></code></pre></td></tr></table></div></figure>


<p>なんやかんや最終的にはurlが間違ってたっぽい･･･url+=/books</p>

<p><a href="http://rice-rails-bootstrap-test.herokuapp.com/books">http://rice-rails-bootstrap-test.herokuapp.com/books</a></p>

<p>アホや･･･</p>

<h2>CentOSにherokuを</h2>

<p>参考:<a href="http://succi.jp/blog/?p=1137">「CentOSにheroku toolbeltをインストール」が失敗する場合の対処</a></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># いきなりshに送る事は避けて、install.shをダウンロード
</span><span class='line'>$ wget --no-check-certificate https://toolbelt.heroku.com/install.sh
</span><span class='line'>
</span><span class='line'># install.shの内容を確認してから、改めて実行
</span><span class='line'>$ sh ./install.sh
</span><span class='line'>This script requires superuser access to install software.
</span><span class='line'>You will be prompted for your password by sudo.
</span><span class='line'>Installation complete
</span><span class='line'>
</span><span class='line'># install.shを削除
</span><span class='line'>$ rm install.sh
</span><span class='line'>
</span><span class='line'># パスを追加
</span><span class='line'>$ echo 'PATH="/usr/local/heroku/bin:$PATH"' &gt;&gt; .bashrc
</span><span class='line'>$ source .bashrc
</span><span class='line'>
</span><span class='line'># 実行
</span><span class='line'>$ heroku --version
</span><span class='line'>heroku-toolbelt/3.1.0 (x86_64-linux) ruby/2.0.0</span></code></pre></td></tr></table></div></figure>


<p>ok</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Jenkinsについて学ぶ]]></title>
    <link href="http://rice-american.github.io/blog/2014/01/19/about_jenkins/"/>
    <updated>2014-01-19T12:51:01+09:00</updated>
    <id>http://rice-american.github.io/blog/2014/01/19/about_jenkins</id>
    <content type="html"><![CDATA[<p>Jenkins本『入門Jenkins』にて学んだことをメモ。
hogehogeo</p>

<h1>第1章</h1>

<h2>継続的インテグレーション(CI)とは</h2>

<ul>
<li>CIという言葉が生まれる以前:スモークテストと夜間ビルド</li>
<li><p>90年台後半:アジャイル開発の中で、XP(eXtreme Programming)のプラクティスの一つとしてCIが提案され、Webアプリケーション開発の現場で使われ始めた。
よく使われていたのは、<em>CruiseControl</em>や<em>Apache Continum</em>など。</p></li>
<li><p>CIは夜間ビルドのように、決まった時間にビルドするのではなく、CIツールがバージョン監視システムのリポジトリを監視し、リポジトリに変更があった場合にコンパイル、テスト、デプロイという一連のビルドを実施してくれる。</p></li>
</ul>


<h2>CIのメリット</h2>

<ol>
<li>欠陥の早期検知

<ul>
<li>複数人開発の場合、ほかの人の開発したモジュールと結合してみると、全くテストが動作しないということがある。CIツールを使用して、常時修正を取り込み、ビルドすることで、結合時の問題を解消できる。</li>
<li>独立したCIサーバが常にリポジトリを関し、変更があったら一連のビルドを実施することで、特に結合に絡む欠陥の早期に検出し、各開発者にフィードバックできるようになる。</li>
</ul>
</li>
<li>手作業によるミスの低減

<ul>
<li>コンパイル、テスト、デプロイを手作業でやった場合、ミスが発生することが考えられるが、CIツールを使えば大丈夫。</li>
</ul>
</li>
<li>時系列品質の可視化

<ul>
<li>CIツールでは各ビルドに関する情報を格納しているので、時系列でビルドに関する各種情報を可視化できる。</li>
</ul>
</li>
</ol>


<h2>CIの構成要素</h2>

<h3>CIのフロー</h3>

<ol>
<li>開発者がソースコードやテストを作成or修正して変更をバージョン管理サーバのリポジトリに登録</li>
<li>CIサーバがバージョン管理サーバ上のリポジトリの変更を検知</li>
<li>CIサーバが対象のリポジトリに紐づく各種ジョブの実施をビルドサーバに依頼する。ビルドサーバはCIサーバと独立していないこともある</li>
<li>ビルドサーバがコンパイルやテストなどのジョブを実施する。</li>
<li>ジョブの結果をCIサーバが収集し、レポートをにまとめる</li>
<li>CIサーバがジョブの結果を開発者にメールやチャットなどでフィードバックする</li>
</ol>


<p>基本的に上記の流れを繰り返す。CIサーバは定期ビルドも実施できたり、トリガを設定できたりする。</p>

<h4>バージョン管理システム</h4>

<p>Git marcurialなど</p>

<h4>ビルドツール</h4>

<p>JavaではApache Ant, Apache Maven, RubyでつかわれるRakeなど。</p>

<h4>CIツール</h4>

<p>JenkinsはオープンソースCIツールのデファクトスタンダード
商用ツールではMicrosoft Visual Studio Term Founation Serverなど</p>

<h4>テストツール</h4>

<ul>
<li>CIツールではJUnitのようなユニットテストツールをはじめとして様々なレベルのテストツールを実施、レポーティングをサポートする。</li>
<li>LL言語ではテスト・ツールを使ったテストに成る。

<h4>コードカバレッジツール</h4>

自動テキストを実施したさいに、テスト対象の製品コードを自動テストがどれだけテストを実行できたかをステートメントカバレッジと言った網羅基準に従って計測してくれるもの。
CIツールではコードカバレッジも示してくれる。

<h4>コードインスペクションツール</h4></li>
<li>テストのようにコードを実行するのではなく、ソースコードもしくはバイトコードを読み取って、コーディングルールの準拠や潜在バグの検出をするもの。</li>
<li>Javaの開発ではCheckstyleとFindBugsがデファクトスタンダード。両方使われることが多い。</li>
<li>CIツールではコードインスペクションツールの実施結果もレポートにでき、また時系列に可視化できる。

<h4>コードレビューシステム</h4></li>
<li>CIの目的はビルドのすべての作業を自動化するだけではない。</li>
<li>コードレビューや手動テストといったどうしても人でのワークフローが必要な領域があり、その一つがコードレビューシステム。</li>
<li>Gerritを始めとするコードレビューシステムにより、手動でのコードレビューをサポートする。</li>
</ul>


<h1>第2章 Jenkinsの生まれた背景と歴史</h1>

<h2>Jenkinsの生まれた背景</h2>

<p>Jenkinsは元々Hudosonという名称で、2004年川口耕介氏によって開発された。</p>

<h2>CIツールとしてのJenkinsのメリット</h2>

<ul>
<li>CruiseControlやApacheContinumよりもJenkinsが選ばれる理由について</li>
</ul>


<h3>インストールが容易</h3>

<ul>
<li>installerの指示に従えば、数ステップでCIサーバが立てられる。</li>
</ul>


<h3>つかいやすいWebインタフェースによる運用の容易性</h3>

<ul>
<li>Pluginによる拡張性の高い運用が可能だが、これもWebインタフェースによりできる。</li>
</ul>


<h3>豊富なPlugin</h3>

<ul>
<li>デフォルトではSubversionだが、Git Pluginなどを入れれば、各種バージョン管理システムが利用できる。また、ユニットテストツール、メトリックスツール、ビルドツール、課題管理ツール、テスト管理ツールでもメジャーなものはPluginを導入すれば使える。</li>
</ul>


<h2>JavaEE以外の利用</h2>

<ul>
<li>JenkinsはJavaで開発されていることから、JavaEEで使用されていることが多い、しかし、他の領域でも使用できる。

<ul>
<li>Android Application</li>
<li>RoR</li>
<li>コードレビューシステムGerrit</li>
<li>Catalystアプリケーション開発</li>
</ul>
</li>
</ul>


<h1>第4章 Jenkinsの導入</h1>

<h2>Jenkinsのyum install</h2>

<p>今回は本書で使われているUbuntuではなく、Centos6.5に導入することに。</p>

<p>CentOSにJenkinsを入れるに当たり、<a href="http://qiita.com/phimcall/items/10e2003b712ed0adfc7c">CentOS に Jenkins を入れて自動的にコミットとかやりたかった &ndash; Qiita [キータ]</a>を参考にしたのん。</p>

<h1>第7章 RoRをもいいたアプリケーションでのJenkins実践</h1>

<h2>rails newとRSpec</h2>

<ul>
<li>TestToolにRSpecをgem installするため、Gemfileに以下の行を加え、bundle installを行います。</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>group :test, :development do
</span><span class='line'>  gem 'rspec-rails', '~&gt;2.0'
</span><span class='line'>end</span></code></pre></td></tr></table></div></figure>


<ul>
<li>RSpecに必要なファイルを生成</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>vagrant:&gt;rails generate rspec:install    [/vagrant/work/blog][01/19 06:05:44]
</span><span class='line'>      create  .rspec
</span><span class='line'>      create  spec
</span><span class='line'>      create  spec/spec_helper.rb</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Railsのscaffoldを用いてProject基礎部分をテストとともに生成する。</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rails generate scaffold Port name:string title:string content:text</span></code></pre></td></tr></table></div></figure>


<ul>
<li><p>capybara-webkitのインストール
capybara-webkitは、<strong>RSpecではやってくれないJavaScriptのテストを含めた結合テスト</strong>を行ってくれる。</p></li>
<li><p>Qtをインストール</p></li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ yum install qt4 qt4-devel qt4-doc qt4-postgresql qt4-odbc qt4-sqlite qt-creator</span></code></pre></td></tr></table></div></figure>


<p>rspec-rails
database_cleaner</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>group :test, :development do
</span><span class='line'>    gem 'rspec-rails', '~&gt;2.0'
</span><span class='line'>    gem 'database_cleaner'
</span><span class='line'>end
</span><span class='line'>
</span><span class='line'>group :test do
</span><span class='line'>    gem 'headless'
</span><span class='line'>end
</span><span class='line'>~</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Gem::Ext::BuildError: ERROR: Failed to build gem native extension.
</span><span class='line'>
</span><span class='line'>    /home/vagrant/.rbenv/versions/2.1.0/bin/ruby extconf.rb
</span><span class='line'>Command 'qmake -spec linux-g++ ' not available
</span><span class='line'>
</span><span class='line'>Makefile not found
</span><span class='line'>
</span><span class='line'>Gem files will remain installed in /home/vagrant/.rbenv/versions/2.1.0/lib/ruby/gems/2.1.0/gems/capybara-webkit-1.1.1 for inspection.
</span><span class='line'>Results logged to /home/vagrant/.rbenv/versions/2.1.0/lib/ruby/gems/2.1.0/extensions/x86_64-linux/2.1.0-static/capybara-webkit-1.1.1/gem_make.out
</span><span class='line'>An error occurred while installing capybara-webkit (1.1.1), and Bundler cannot
</span><span class='line'>continue.
</span><span class='line'>Make sure that `gem install capybara-webkit -v '1.1.1'` succeeds before
</span><span class='line'>bundling.
</span><span class='line'>FAILED...gem install capybara-webkit -v '1.1.1'</span></code></pre></td></tr></table></div></figure>


<p>今日(2014/01/19)はここまで</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octpressを導入してイカすBlogを作る]]></title>
    <link href="http://rice-american.github.io/blog/2014/01/18/octpress/"/>
    <updated>2014-01-18T10:57:20+09:00</updated>
    <id>http://rice-american.github.io/blog/2014/01/18/octpress</id>
    <content type="html"><![CDATA[<p>Jekyllをそのまま使うより<a href="http://octopress.org/">Octopress</a>を使うのが、Blogの運用には最適らしい。
<code>rake new_post["title"]</code>で記事作成できるのが楽。</p>

<h2>導入方法</h2>

<p>Octpress導入までは<a href="http://tantant.jp/blog/Octopress/installing-octopress/">Markdownで書いてGitで管理するブログ「Octopress」の始め方 &ndash; tantant</a>を参考にした。</p>

<h2>theme</h2>

<p><a href="http://opthemes.com/">Opthemes · Octopress Themes</a>を見ながら、Octpressのthemeを決める。今回入れたのは<a href="https://github.com/shashankmehta/greyshade">shashankmehta/greyshade</a>. READMEにinstall方法が載っているのでそのまま導入。</p>

<h2>icon</h2>

<p><a href="http://ja.gravatar.com/">Gravatar</a>を使用している際は、_config.ymlのemail: にGravatarに登録しているemail addressを指定すると、反映される。この場合、メールのリンクがトップ画面に追加される。
また、email addressを載せるのに抵抗がある人はemail_md5: にmd5でhash化したemail addressを指定してあげると良い。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[rails アプリケーション作成の手順]]></title>
    <link href="http://rice-american.github.io/blog/2014/01/18/rails_app/"/>
    <updated>2014-01-18T00:00:00+09:00</updated>
    <id>http://rice-american.github.io/blog/2014/01/18/rails_app</id>
    <content type="html"><![CDATA[<p>#
1. DBの設定</p>

<p>databaseの設定は<code>application_name/dtabase.yml</code>を編集して行う。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>% vim config/database.yml
</span><span class='line'>----
</span><span class='line'># PostgreSQL. Versions 8.2 and up are supported.
</span><span class='line'>#
</span><span class='line'># Install the pg driver:
</span><span class='line'>#   gem install pg
</span><span class='line'># On OS X with Homebrew:
</span><span class='line'>#   gem install pg -- --with-pg-config=/usr/local/bin/pg_config
</span><span class='line'># On OS X with MacPorts:
</span><span class='line'>#   gem install pg -- --with-pg-config=/opt/local/lib/postgresql84/bin/pg_config
</span><span class='line'># On Windows:
</span><span class='line'>#   gem install pg
</span><span class='line'>#       Choose the win32 build.
</span><span class='line'>#       Install PostgreSQL and put its /bin directory on your path.
</span><span class='line'>#
</span><span class='line'># Configure Using Gemfile
</span><span class='line'># gem 'pg'
</span><span class='line'>#
</span><span class='line'>development:
</span><span class='line'>  adapter: postgresql
</span><span class='line'>  encoding: unicode
</span><span class='line'>  database: sample_development
</span><span class='line'>  pool: 5
</span><span class='line'>  username: vagrant
</span><span class='line'>  password: vagrant_password
</span><span class='line'>
</span><span class='line'>  # Connect on a TCP socket. Omitted by default since the client uses a
</span><span class='line'>  # domain socket that doesn't need configuration. Windows does not have
</span><span class='line'>  # domain sockets, so uncomment these lines.
</span><span class='line'>  #host: localhost
</span><span class='line'>
</span><span class='line'>  # The TCP port the server listens on. Defaults to 5432.
</span><span class='line'>  # If your server runs on a different port number, change accordingly.
</span><span class='line'>  #port: 5432
</span><span class='line'>
</span><span class='line'>  # Schema search path. The server defaults to $user,public
</span><span class='line'>  #schema_search_path: myapp,sharedapp,public
</span><span class='line'>
</span><span class='line'>  # Minimum log levels, in increasing order:
</span><span class='line'>  #   debug5, debug4, debug3, debug2, debug1,
</span><span class='line'>  #   log, notice, warning, error, fatal, and panic
</span><span class='line'>  # Defaults to warning.
</span><span class='line'>  #min_messages: notice
</span><span class='line'>
</span><span class='line'># Warning: The database defined as "test" will be erased and
</span><span class='line'># re-generated from your development database when you run "rake".
</span><span class='line'># Do not set this db to the same as development or production.
</span><span class='line'>test:
</span><span class='line'>  adapter: postgresql
</span><span class='line'>  encoding: unicode
</span><span class='line'>  database: sample_test
</span><span class='line'>  pool: 5
</span><span class='line'>  username: vagrant
</span><span class='line'>  password: vagrant_password
</span><span class='line'>
</span><span class='line'>production:
</span><span class='line'>  adapter: postgresql
</span><span class='line'>  encoding: unicode
</span><span class='line'>  database: sample_production
</span><span class='line'>  pool: 5
</span><span class='line'>  username: vagrant
</span><span class='line'>  password: vagrant_password</span></code></pre></td></tr></table></div></figure>


<p>DBを作成</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>% rake db:create RAILS_ENV=development</span></code></pre></td></tr></table></div></figure>


<p>2.controllerを作成</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>% rails generate controller hoge</span></code></pre></td></tr></table></div></figure>


<p>Controllerは<code>application_name/app/controllers</code>に<code>hoge_controller.rb</code>として作成される。</p>

<p>ControllerにはActionを設定する。</p>

<p>3.Routingの設定</p>

<p>Routing設定では、利用者から呼び出された時のActionをどのように実行するかを定義する。設定は<code>application_name/config/routes.rb</code>を書き換えて行う。</p>

<p>例えばユーザが<code>http://localhost:3000/hello</code>を呼び出した時、Controllerで設定したaction｢hello｣を呼び出すには、次のようにRoutingを設定する。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>get 'hello' =&gt; 'booklist#hello'</span></code></pre></td></tr></table></div></figure>


<p>4.railsサーバの起動</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>% rails server</span></code></pre></td></tr></table></div></figure>


<p>5.modelの作成</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>% rails generate model title</span></code></pre></td></tr></table></div></figure>


<p><em>app/models/title.rb</em>が作成される。</p>

<pre><code>また、作成された```db/migrate/20140115163018_create_titles.rb```はmigrationである。migrationは、
1. テーブルに関して行なった処理を記録し、元に戻したり別の環境で同じ処理を簡単に行なわせることができる
2. データベースの種類に関係無く同じスクリプトでテーブルを作成できる

という利点がある。
</code></pre>

<p>6.migration編集</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>class CreateTitles &lt; ActiveRecord::Migration
</span><span class='line'>  def change
</span><span class='line'>    create_table :titles do |t|
</span><span class='line'>
</span><span class='line'>      t.string: name
</span><span class='line'>      t.data: sales_data
</span><span class='line'>      t.timestamps
</span><span class='line'>    end
</span><span class='line'>  end
</span><span class='line'>end</span></code></pre></td></tr></table></div></figure>


<p>migration scriptを起動</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>% rake db:migrate</span></code></pre></td></tr></table></div></figure>


<p>7.テストデータ作成</p>

<pre><code>```db/seeds.rb```を編集し、テストデータを作成する。
</code></pre>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Title.create(:name =&gt; '宇宙に行った日', :sales_date =&gt; '2011-06-28')
</span><span class='line'>Title.create(:name =&gt; '観察日記', :sales_date =&gt; '2011-11-14')</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>% rake db:seed</span></code></pre></td></tr></table></div></figure>


<ol>
<li>確認</li>
</ol>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sample_development=# select * from titles;
</span><span class='line'> id |         name          | sales_date |         created_at         |
</span><span class='line'>  updated_at
</span><span class='line'>----+-----------------------+------------+----------------------------+-------
</span><span class='line'>---------------------
</span><span class='line'>  1 | 宇宙に行った日 | 2011-06-28 | 2014-01-16 04:46:10.565985 | 2014-01-16 04:46:10.565985
</span><span class='line'>  2 | 観察日記          | 2011-11-14 | 2014-01-16 04:46:10.666546 | 2014-01-16 04:46:1
</span><span class='line'>0.666546
</span><span class='line'>(2 rows)</span></code></pre></td></tr></table></div></figure>


<p></p>

<pre><code>migrationを利用し、作成されている。
</code></pre>

<p>8.Databaseの情報を取得し表示する</p>

<p>action methodを書き換える。<code>controller/booklist_controller.rb</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[VagrantでCentOSを入れてRails環境構築]]></title>
    <link href="http://rice-american.github.io/blog/2014/01/12/vagrant/"/>
    <updated>2014-01-12T11:53:18+09:00</updated>
    <id>http://rice-american.github.io/blog/2014/01/12/vagrant</id>
    <content type="html"><![CDATA[<h2>目標</h2>

<p>VagnrantでCentOS立てて、Railsの開発環境を整えてBox化する。</p>

<h2>vagrantの環境構築</h2>

<p>参考サイト
<a href="http://qiita.com/hamichamp/items/e27a0ecacc33482936c8">Mac OS XでVagrantとChefを使った環境構築のまとめ &ndash; Qiita [キータ]</a></p>

<h3>boxをつくるまでのながれ</h3>

<ol>
<li>virtual boxいれます</li>
<li>vagrantいれます</li>
<li>osのboxいれます</li>
<li>環境を構築します</li>
<li>box化します</li>
</ol>


<h3>実際にやってみる</h3>

<h4>1. virtual box入れます</h4>

<ul>
<li><a href="https://www.virtualbox.org/wiki/Downloads">Downloads – Oracle VM VirtualBox</a>
Virtual Box 4.3.6が最新(2014/01/12)</li>
</ul>


<h4>2. vagrant入れます</h4>

<ul>
<li><a href="http://www.vagrantup.com/">Vagrant公式サイト</a>
Vagrant 1.4.3が最新(2014/01/12)</li>
</ul>


<h4>3. osのbox入れます</h4>

<ul>
<li><a href="http://www.vagrantbox.es/">A list of base boxes for Vagrant &ndash; Vagrantbox.es</a></li>
</ul>


<p>installしたいOSとversionを捜す。今回はCentOSの最新ver 6.5.1を入れます。
vagrant addでlocalにOSをDLします。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>% vagrant --version                                                        [~/trial/DataCollection/test]
</span><span class='line'>Vagrant 1.4.3
</span><span class='line'>% which vagrant                                                            [~/trial/DataCollection/test]
</span><span class='line'>/usr/bin/vagrant
</span><span class='line'>% vagrant box add centos65-x86_64-20131205 https://github.com/2creatives/vagrant-centos/releases/download/v6.5.1/centos65-x86_64-20131205.box
</span><span class='line'>Downloading box from URL: https://github.com/2creatives/vagrant-centos/releases/download/v6.5.1/centos65-x86_64-20131205.box
</span><span class='line'>Extracting box...te: 309k/s, Estimated time remaining: --:--:--)
</span><span class='line'>Successfully added box 'centos65-x86_64-20131205' with provider 'virtualbox'!</span></code></pre></td></tr></table></div></figure>


<p>18分くらいかかった。</p>

<p>確認してみる。(localにあるosのbox一覧)</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>% vagrant box list                                                     
</span><span class='line'>centos                   (virtualbox)
</span><span class='line'>centos65-x86_64-20131205 (virtualbox)</span></code></pre></td></tr></table></div></figure>


<p>centos65-x86_64-20131205が入ってる。
(centosは前に作ったやつ。)</p>

<p>てきとうなディレクトリを作って</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>% vagrant init
</span><span class='line'>% vagrant up
</span><span class='line'>% vagrant ssh</span></code></pre></td></tr></table></div></figure>


<p>とするのだが、<code>vagrant up</code>でエラーが出た。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Bringing machine 'default' up with 'virtualbox' provider...
</span><span class='line'>There are errors in the configuration of this machine. Please fix
</span><span class='line'>the following errors and try again:
</span><span class='line'>
</span><span class='line'>vm:
</span><span class='line'>* The box 'base' could not be found.</span></code></pre></td></tr></table></div></figure>


<p><a href="http://www.trapon.jp/log/201307/mac_vagrant_centos.html">Macで Vagrant を導入してCentOSを入れる | trapon : experience</a>
より、先ほど作成したbox名(centos65-x86_64-20131205)を指定しなければならないらしい。</p>

<p>vagnratfileを書き換えて再度<code>vagrant up</code>を実行。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>% vagrant up                                  [~/vagrant/kita]
</span><span class='line'>WARN: Unresolved specs during Gem::Specification.reset:
</span><span class='line'>      ffi (&gt;= 1.0.11, ~&gt; 1.0)
</span><span class='line'>      net-ssh (&lt; 2.8.0, &gt;= 2.6.5, &gt;= 2.6.6)
</span><span class='line'>WARN: Clearing out unresolved specs.
</span><span class='line'>Please report a bug if this causes problems.
</span><span class='line'>Bringing machine 'default' up with 'virtualbox' provider...
</span><span class='line'>[default] Importing base box 'centos65-x86_64-20131205'...
</span><span class='line'>[default] Matching MAC address for NAT networking...
</span><span class='line'>[default] Setting the name of the VM...
</span><span class='line'>[default] Clearing any previously set forwarded ports...
</span><span class='line'>[default] Clearing any previously set network interfaces...
</span><span class='line'>[default] Preparing network interfaces based on configuration...
</span><span class='line'>[default] Forwarding ports...
</span><span class='line'>[default] -- 22 =&gt; 2222 (adapter 1)
</span><span class='line'>[default] Booting VM...
</span><span class='line'>[default] Waiting for machine to boot. This may take a few minutes...
</span><span class='line'>[default] Machine booted and ready!
</span><span class='line'>[default] Mounting shared folders...
</span><span class='line'>[default] -- /vagrant</span></code></pre></td></tr></table></div></figure>


<p>ok.次は環境構築。</p>

<h4>4. 環境を構築します</h4>

<p><strong>最低限必要な環境を構築</strong></p>

<p>zsh, vim, emacs, wget, rubyをyum install</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>% sudo yum install -y zsh vim emacs wget ruby</span></code></pre></td></tr></table></div></figure>


<p>rubyをinstallするためにrubyが必要なので、rubyを入れる。</p>

<p>あと、</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>% sudo chsh -s /bin/zsh vagrant</span></code></pre></td></tr></table></div></figure>


<p>でvagrantのlogin shellを指定しておく。</p>

<p><strong>rbenvを導入</strong></p>

<p>次にrubyのversion管理を行ってくれるrbenvを入れる。
gitは入っていたのでrbenvをgit cloneする</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[vagrant@vagrant-centos65 ~]$ git clone git://github.com/sstephenson/rbenv.git .rbenv
</span><span class='line'>Initialized empty Git repository in /home/vagrant/.rbenv/.git/
</span><span class='line'>remote: Reusing existing pack: 1857, done.
</span><span class='line'>remote: Total 1857 (delta 0), reused 0 (delta 0)
</span><span class='line'>Receiving objects: 100% (1857/1857), 290.89 KiB | 118 KiB/s, done.
</span><span class='line'>Resolving deltas: 100% (1162/1162), done.</span></code></pre></td></tr></table></div></figure>


<p>無事install完了</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>% echo 'export PATH="$HOME/.rbenv/bin:$PATH"' &gt;&gt; ~/.zprofile
</span><span class='line'>% echo 'eval "$(rbenv init - zsh)"' &gt;&gt; ~/.zprofile
</span><span class='line'>% source .zprofile</span></code></pre></td></tr></table></div></figure>


<p>rbenvで確認</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>% rbenv
</span><span class='line'>rbenv 0.4.0-89-g14bc162
</span><span class='line'>(ry</span></code></pre></td></tr></table></div></figure>


<p>おk</p>

<p>次にruby-buildを入れる。ruby-buildはrbenvでrubyをinstallする際に必要となる、rbenvのplugin。.rbenv/pluginsに入れる。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git clone git://github.com/sstephenson/ruby-build.git ~/.rbenv/plugins/ruby-build</span></code></pre></td></tr></table></div></figure>


<p>そしたら</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[vagrant@vagrant-centos65 ~]$ rbenv install
</span><span class='line'>Usage: rbenv install [-f] [-kvp] &lt;version&gt;</span></code></pre></td></tr></table></div></figure>


<p>rbenv installが使える。これで<code>rbenv install 2.0.0-dev</code>で2.0.0-devを入れられる。。。</p>

<p>と思ったらエラー</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>/tmp/ruby-build.20140112065649.9158 ~
</span><span class='line'>Initialized empty Git repository in /tmp/ruby-build.20140112065649.9158/ruby-2.2.0-dev/.git/
</span><span class='line'>/tmp/ruby-build.20140112065649.9158/ruby-2.2.0-dev /tmp/ruby-build.20140112065649.9158 ~
</span><span class='line'>configure.in:6: error: Autoconf version 2.67 or higher is required←これ
</span><span class='line'>configure.in:6: the top level
</span><span class='line'>autom4te: /usr/bin/m4 failed with exit status: 63</span></code></pre></td></tr></table></div></figure>


<p>autoconf version2.67以上が必要。
一応、確認してみる。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[vagrant@vagrant-centos65 ~]$ autoconf --version
</span><span class='line'>autoconf (GNU Autoconf) 2.63
</span><span class='line'>Copyright (C) 2008 Free Software Foundation, Inc.
</span><span class='line'>License GPLv2+: GNU GPL version 2 or later
</span><span class='line'>&lt;http://gnu.org/licenses/old-licenses/gpl-2.0.html&gt;
</span><span class='line'>This is free software: you are free to change and redistribute it.
</span><span class='line'>There is NO WARRANTY, to the extent permitted by law.
</span><span class='line'>
</span><span class='line'>Written by David J. MacKenzie and Akim Demaille.</span></code></pre></td></tr></table></div></figure>


<p>version 2.63だった。
wgetで最新のautoconfを入れる。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>% wget http://ftp.gnu.org/gnu/autoconf/autoconf-2.69.tar.gz
</span><span class='line'>% tar zxfv autoconf-2.69.tar.gz</span></code></pre></td></tr></table></div></figure>


<p>あとはcdしてconfigureしてmakeしてmake install.あと/usr/local/binにpathを通す。(忘れてた)</p>

<p>コレでよしと思ったらまたエラーが出た。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>The Ruby openssl extension was not compiled. Missing the OpenSSL lib?</span></code></pre></td></tr></table></div></figure>


<p>opensslがないって言われた。が、opensslはある･･･
しらべてみると同じようなエラーが出た人がいた。
<a href="http://futurismo.biz/archives/1389">CentOSに rbenv 経路で Ruby 2.0.0-p195を入れようとしたら、エラー | Futurismo</a>
libssl-devがないといけないらしい。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>% sudo yum -y install openssl-devel</span></code></pre></td></tr></table></div></figure>


<p>を実行</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ rbenv install 2.2.0-dev
</span><span class='line'>ry
</span><span class='line'>$ rbenv versions
</span><span class='line'>* system (set by /home/vagrant/.rbenv/version)
</span><span class='line'>  2.2.0-dev</span></code></pre></td></tr></table></div></figure>


<p>出来た。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ rbenv global 2.2.0-dev
</span><span class='line'>$ ruby --version
</span><span class='line'>ruby 2.2.0dev (2014-01-12 trunk 44569) [x86_64-linux]</span></code></pre></td></tr></table></div></figure>


<p>railsをgem install</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ gem install rails</span></code></pre></td></tr></table></div></figure>


<p>30分くらいかかった。</p>

<p><strong>rails環境を整える</strong></p>

<p>DBMSはpostgresqlを使用するので、2014/01/15現在最新のver9.3 を入れる。</p>

<p>参考:<a href="http://www.ideaxidea.com/archives/2013/12/centos6_postgresql_yum.html">PostgreSQL9.3をCentOS6にyumで入れて設定するまでの手順まとめ | IDEA*IDEA</a></p>

<p>postgresql93のinstallと自動起動の設定</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo rpm -i http://yum.postgresql.org/9.3/redhat/rhel-6-x86_64/pgdg-redhat93-9.3-1.noarch.rpm
</span><span class='line'>$ sudo yum -y install postgresql93-server postgresql93-contrib  postgresql93-devel
</span><span class='line'>$ sudo service postgresql-9.3 initdb
</span><span class='line'>$ sudo chkconfig postgresql-9.3 on
</span><span class='line'>$ sudo service postgresql-9.3 status
</span><span class='line'>$ sudo service postgresql-9.3 start</span></code></pre></td></tr></table></div></figure>


<p>Timezoneの設定</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo vim /var/lib/pgsql/9.3/data/postgresql.conf
</span><span class='line'>timezone = 'Asia/Tokyo'</span></code></pre></td></tr></table></div></figure>


<p>install時にposstgresというユーザが作られる。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ id postgres
</span><span class='line'>uid=26(postgres) gid=26(postgres) groups=26(postgres)
</span><span class='line'>$ su - postgres
</span><span class='line'>Password:</span></code></pre></td></tr></table></div></figure>


<p>installされたpsqlコマンドは、<code>/usr/pgsql-9.3/bin</code>以下に保存されるので、そこにPATHを通しておく。</p>

<p>次にuser vagrant に権限を追加する
参考:<a href="http://www.postgresql.jp/document/8.1/html/app-createuser.html">createuser</a></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ su - postgres
</span><span class='line'>$ createuser --createdb --createrole --superuser vagrant
</span><span class='line'>$ psql
</span><span class='line'>psql (9.3.2)
</span><span class='line'>Type "help" for help.
</span><span class='line'>
</span><span class='line'>postgres=# \du
</span><span class='line'>                             List of roles
</span><span class='line'> Role name |                   Attributes                   | Member of
</span><span class='line'>-----------+------------------------------------------------+-----------
</span><span class='line'> postgres  | Superuser, Create role, Create DB, Replication | {}
</span><span class='line'> vagrant   | Superuser, Create role, Create DB              | {}</span></code></pre></td></tr></table></div></figure>


<p>次にrails環境の構築を行う。
作業は/vagrant/work以下で行う。この/vagrantディレクトリはhostOSでのVagrantfileの入ったディレクトリとの共有ディレクトリである。</p>

<p>つぎにpgのinstallは、<code>% gem install pg -- --with-pg-config=/usr/pgsql-9.3/bin/ --with-pg-lib=/usr/pgsql-9.3/lib</code>
のように指定してinstallする必要がある。</p>

<p>その後、<code>rails new sample -d postgresql</code>を実行する。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>% rails new sample -d postgresql
</span><span class='line'>(ry</span></code></pre></td></tr></table></div></figure>


<p>bundle installに割りと時間がかる。</p>

<p>その後、作成したsampleディレクトリに移動し、<a href="http://www.rubylife.jp/rails/ini/">アプリケーション作成から実行までの手順 &ndash; Ruby on Rails入門</a> を元に<code>rails server(rails s)</code>を実行しrailsアプリが動くか確認。</p>

<p>エラーが発生した。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>autodetect': Could not find a JavaScript runtime.</span></code></pre></td></tr></table></div></figure>


<p>sample/Gemfileでコメントアウトされている<code>gem 'therubyracer', :platforms =&gt; :ruby</code>をコメントアウト外して<code>bundle install</code>を行う。</p>

<p>ここまで来たらrailsアプリが作成できる。その前に、一度vagrantを閉じ、vagrantfileに記述を追加する。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>config.vm.network :forwarded_port, guest: 3000, host: 3000</span></code></pre></td></tr></table></div></figure>


<p>これは、gestOSのport3000番を、hostOSの3000番に接続する記述である。この記述により、guestOSで立ち上げたRailsApplicationがhostOSのブラウザで確認できるようになる。</p>

<p>なお、railsアプリケーションの作成法については <a href="http://www.rubylife.jp/rails/ini/index6.html">モデルの作成とデータベースの利用 &ndash; Ruby on Rails入門</a>を参考にし、作成できることを確認した。</p>

<h4>5. box化します</h4>

<ol>
<li><code>VBoxManage list vms</code>でbox化したいVM imageの名前をコピー</li>
<li><code>vagrant package --base コピーしたVMimageの名前 --output path/to/任意のbox名.box</code>で&mdash;outputで指定したpathにboxファイルが作成される。</li>
<li>作成されたboxを<code>vagrant box add</code>して、きちんと使用できるか確認する。</li>
<li>出来た。</li>
</ol>


<p>vagrantでCentOSを入れる、rails環境を整える、box作成までの流れはこんなかんじ。</p>

<p>やっとJenkinsに移れる･･･</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[github+page+jekyll+jekyll+bootstarpでBlogを始めたかったんだ]]></title>
    <link href="http://rice-american.github.io/blog/2014/01/12/jekyll/"/>
    <updated>2014-01-12T00:00:00+09:00</updated>
    <id>http://rice-american.github.io/blog/2014/01/12/jekyll</id>
    <content type="html"><![CDATA[<p>github-pageとjekyllとjekyll-boostrapなページを作ってmarkdownfileをドヤ顔公開してみる</p>

<p>参考: <a href="http://mattn.github.io/2012/03/22/installed-jekyll-bootstrap/">jekyll bootstrapをgithubページにインストールしてみた</a></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ git clone https://github.com/plusjade/jekyll-bootstrap.git rice-american.github.io
</span><span class='line'>$ cd mattn.github.io
</span><span class='line'>$ git remote set-url origin git@github.com:rice-american/rice-american.github.io.git
</span><span class='line'>$ git push origin master</span></code></pre></td></tr></table></div></figure>


<p>Jekyll bootstarpのテーマ: <a href="http://themes.jekyllbootstrap.com/preview/the-minimum/">Hello World!</a>を見ながらテーマを変える。→hooliganにした。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ rake theme:install git="https://github.com/dhulihan/hooligan.git"</span></code></pre></td></tr></table></div></figure>


<p>markdown記法に何があったのでレンダリングエンジン、redcarpetを指定する。
_config.ymlに</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>markdown: redcarpet
</span><span class='line'>redcarpet:
</span><span class='line'>  extensions: [tables,autolink,strikethrough]</span></code></pre></td></tr></table></div></figure>


<p>を追記</p>

<p>2014/01/18追記
BlogはOctpressに移行。短い天下だった。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Jenkins Chef Bundleについて調べた]]></title>
    <link href="http://rice-american.github.io/blog/2014/01/12/about_Jenkins_Chef_Bundle/"/>
    <updated>2014-01-12T00:00:00+09:00</updated>
    <id>http://rice-american.github.io/blog/2014/01/12/about_Jenkins_Chef_Bundle</id>
    <content type="html"><![CDATA[<h2>しらべたもの</h2>

<h4>Vagrantについて</h4>

<p>といってもここを見ただけ</p>

<ul>
<li><p><a href="http://qiita.com/kidachi_/items/e63c1607705178aa257c">Vagrantの基本 &ndash; Qiita [キータ]</a></p></li>
<li><p>嬉しいこと</p>

<ul>
<li>他人への環境配布が容易(boxを配ればいい)</li>
<li>ゲストOS(CentOSとか)とホストOS(Macとか)で共有フォルダが作成されるので、Macの環境でコードを書いて、ホストOSで実行する、ということができる！</li>
</ul>
</li>
</ul>


<h4>Jenkinsについて</h4>

<p>継続的インテグレーション(CI)するやーつ</p>

<pre><code>テストの自動化
デプロイの自動化
各種タイミングでの通知
</code></pre>

<p>をしてくれるすごいやつらしい→
<a href="http://www.buildinsider.net/enterprise/jenkins/01">Jenkinsを使ってみよう（Mac OS X＆Linux）［Ruby、Rails］ &ndash; Build Insider</a></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'> brew install jenkins</span></code></pre></td></tr></table></div></figure>


<p>で入る。</p>

<h4>Chefについて</h4>

<ul>
<li>ファイルに記述した設定内容に応じて自動的にユーザーの作成やパッケージのインストール、設定ファイルの編集などを行うツール.</li>
<li>Recipeを元にserverを立てる。</li>
<li>Recipeはrubyで書かれている。</li>
</ul>


<h4>Bundelrについて</h4>

<ul>
<li>Gemパッケージの種類やバージョン管理し、複数のPCで必要なGemパッケージを簡単にinstallすることができるPackageである。</li>
</ul>


<p>tips:<a href="http://blog.mirakui.com/entry/20100703/1278165723">gem管理の新標準ツール&#8221;Bundler&#8221;のTips &ndash; 昼メシ物語</a></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>bundle install [Dir]</span></code></pre></td></tr></table></div></figure>


<p>とすると、Dir以下にgemが展開されるので、localのgemは汚染されない。</p>

<p>通常は</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>bundle install vender/bundle</span></code></pre></td></tr></table></div></figure>


<p>とする。</p>

<p>こうしてbundle install すると、次回以降はdir指定はしなくて良い。</p>

<p>設定ファイルは<strong>./bundle/config</strong>にあり。</p>

<p>$GEM_HOMEのgemを一切使わないoptionは</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ bundle install --path=vendor/bundle --binstubs=vendor/bin</span></code></pre></td></tr></table></div></figure>


<p>となる。</p>

<p><strong>exec</strong></p>

<ul>
<li><strong>bundle execをつかうと、BUNDLE_PATH以下のgemが使われる。</strong></li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ bundle exec hoge</span></code></pre></td></tr></table></div></figure>


<p><strong>cronからbundleを使いたいときは</strong></p>

<p><code>
 * * * * * source $HOME/.rvm/scripts/rvm; rvm your-ruby-version; cd /path-to-project/; bundle exec ruby your-script.rb
</code>
とするらしい。</p>
]]></content>
  </entry>
  
</feed>
