<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Security | こめぶろぐ]]></title>
  <link href="http://rice-american.github.io/blog/categories/security/atom.xml" rel="self"/>
  <link href="http://rice-american.github.io/"/>
  <updated>2014-03-07T13:35:32+09:00</updated>
  <id>http://rice-american.github.io/</id>
  <author>
    <name><![CDATA[rice_american]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Railsで、暗号化されたpasswordを使ってログイン機構を作ってみる。]]></title>
    <link href="http://rice-american.github.io/blog/2014/03/07/rails-sec-login/"/>
    <updated>2014-03-07T13:23:17+09:00</updated>
    <id>http://rice-american.github.io/blog/2014/03/07/rails-sec-login</id>
    <content type="html"><![CDATA[<p>前回でpasswordの暗号化までいけたので、今度はそれを使ってログインするところまで。
参考: <a href="http://qiita.com/regonn/items/4c76d4f3ef6c6af5c5e5">Rails4対応 Gemを使わずに自分だけログインできる環境を作る &ndash; Qiita</a></p>

<h3>1. ログイン環境のsessionコントローラを生成</h3>

<p><code>sh
$ rails g controller sessions
</code></p>

<h3>2. viewの作成</h3>

<p><code>views/sessions/new.html.erb</code>
```rb</p>

<div class="row">
  <div class="span6 offset3">
  </div><%- model_class = User -%>
<div class="page-header">
  <!--  <h1><%=t '.title', :default => [:'helpers.titles.new', 'New %{model}'], :model => model_class.model_name.human.titleize %></h1>-->
</div>
<%= simple_form_for @user, url: sessions_path, html: { class: 'form-horizontal' } do |f| %>
  <h2 class="simple_form-heading">ログイン</h2>
  <%= f.input :user_name, label: false, placeholder: 'ユーザ名 or メールアドレス', input_html: { type: 'text', class: 'form-control input-xlarge', id: 'user_user_name'} %>
  <%= f.input :password, label: false, placeholder: 'パスワード', input_html: { type: 'password_confirm', class: 'form-control input-xlarge', id: 'password'}  %>
  <%= f.button :submit, label: false, value: 'login', class: 'btn btn-lg btn-primary btn-block' %>
<% end %>

</div>


<p>```</p>

<h3>3. routes.rbにsessionsのルートを追加</h3>

<p><code>config/routes.rb</code>
<code>rb
resources :sessions, only: [:new, :create, :destroy]
</code></p>

<h3>4. controllerを編集</h3>

<p><code>app/controller/session_controller.rb</code>
```rb
class SessionsController &lt; ApplicationController</p>

<pre><code>def new 
    @user = User.new
end

def create
    user = User.find_by_user_name(params[:user][:user_name])
    if user &amp;&amp; user.authenticate(params[:user][:password])
        session[:user_id] = user.id
        redirect_to root_path
    else
        flash.now.alert = "ユーザ名かパスワードが間違っています"
        new()
        render "new"
    end
end

def destroy
    session[:user_id] = nil
    redirect_to root_path
end
</code></pre>

<p>end
```
現段階では、ログイン認証に成功すると、root(jantaku)に飛びます。</p>

<h3>5. Viewのヘルパーメソッドでログイン情報を取得できるようにする</h3>

<p>```rb</p>

<h1>app/controller/application_controller.rb</h1>

<p>  def current_user</p>

<pre><code>@current_user ||= User.find(session[:user_id]) if session[:user_id]
</code></pre>

<p>  end</p>

<p>  helper_method :current_user
end
```</p>

<h3>6. Viewにログイン機能へのパスを書きます。</h3>

<p>```erb</p>

<h1>kitaken Top</h1>


<p>&lt;% if current_user == nil %>
&lt;%= button_to &ldquo;create account&rdquo;, new_user_path, method: :get, class: &ldquo;btn btn-lg&rdquo; %>
&lt;%= button_to &ldquo;login&rdquo;, new_session_path, method: :get, class:  &ldquo;btn btn-lg&rdquo; %>
&lt;% else %>
  &lt;%= button_to &ldquo;logout&rdquo;, session_path(current_user.id), data: {:confirm => &lsquo;ログアウトしますか？&rsquo;}, method: :delete, class: &ldquo;btn btn-lg&rdquo; %>
&lt;% end %>
```</p>

<ul>
<li>未ログイン時</li>
</ul>


<p><img src="https://f.cloud.github.com/assets/1464221/2343867/8611e0e6-a516-11e3-9c6d-e7cf0617eba5.png" alt="2014-03-06 18 58 36" /></p>

<ul>
<li>ログイン時</li>
</ul>


<p><img src="https://f.cloud.github.com/assets/1464221/2343918/7ee8d0c6-a517-11e3-91cc-f748920c79d6.png" alt="2014-03-06 18 59 06" /></p>

<h3>他のcontrollerで次のように書けばログインしていない状態でeditやnewのページに行こうとするとrootへ戻す。</h3>

<h1>controller</h1>

<p>```rb
before_action :login_check, only: [:new, :edit, :destroy]</p>

<h1>各メソッド</h1>

<p>private
  def login_check</p>

<pre><code>if (session[:user_id] == nil)
  redirect_to root_path
end
</code></pre>

<p>  end
```
今回、コレは行っていません。</p>

<p>以上！</p>
]]></content>
  </entry>
  
</feed>
